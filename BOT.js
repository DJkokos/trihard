const tmi = require('tmi.js'),
    { username, password} = require('./settings.json');
const client = new tmi.Client({
    options: { debug: true, messagesLogLevel: "info" },
    connection: {
        reconnect: true,
        secure: true
    },
    identity: {
        username,
        password
    },
    channels: ['xqcs_desk_garbage', 'Fookstee', 'florian_2807', 'verypogftxqconthetoilet', 'xtwitchPatrick', 'masenka12', 'lordevid', 'Sneeeze_', 'artix', 'kawanpls', 'turtoise', 'faufau4', 'fanda14_']
});
const got = require('got');

const runTime = new Date().toString()

const humanizeDuration = require("humanize-duration");


client.afk = new Map()
const afk = client.afk

client.brb = new Map()
const brb = client.brb

client.gn = new Map()
const gn = client.gn

client.connect().catch(console.error);

var block = false;

client.on("message", async (channel, user, message, self) => {
    if (self) return;
    
    const args = message.slice(1).split(' ')
    const command = args.shift().toLowerCase();
    const size = args[1]
    const size2 = args[0]

    if (message.toLowerCase() === "'hello") {
        client.say(channel, `@${user.username}, Okayge Hello!`);
    }

    if (message.toLowerCase() === "'kek") {
        if (!block) {
            client.say(channel, `TriHard`);
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'vanish")) {
        client.say(channel, `/timeout @${user.username} 1`)

    }

    if (message.toLowerCase().startsWith("'echo") && command === 'echo' && user['user-id'] === "162760707") {
        client.say(channel, `${args.join(" ")}`)

    }

    if (message.toLowerCase().startsWith("'pyramid") && command === 'pyramid') {
        if (!block) {
            if (size > 40) {
                client.say(channel, 'the maximum size is 40')
                ; return;
            }
            for (var i = 0; i < args[1]; i++) {
                client.say(channel, `${args[0]} `.repeat(i))

                if (i > args[1]) break;
            };
            for (var e = args[1]; e > 0; e--) {
                client.say(channel, `${args[0]} `.repeat(e))

                if (e < 0) break;
                block = true;
                setTimeout(() => {
                    block = false;
                }, (30 * 1000));
            }
        }
    }

    if (message.toLowerCase().startsWith("'spam")) {
        if (!block) {
            if (size2 > 80) {
                client.say(channel, 'the maximum size is 80')
                 ;return;}
            for (var i = 0; i < args[0]; i++) {
                client.say(channel, args.slice(1).join(" "))

                if (i > args[0]) break;
            }
            
            block = true;
            setTimeout(() => {
                block = false;
            }, (30 * 1000));
        }
    }

    if (message == "'berriyapls") {
        if (!block) {
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠉⣰⣿⣿⠿⢧⡄⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠸⠛⠛⢣⣤⣤⣾⡇⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠉⢀⠄⣰⣿⣿⣿⣿⢿⡇⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⠇⠄⠄⠙⠿⣿⣿⡿⠿⠆⠿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠘⡀⠄⠄⠄⣸⣿⣿⣇⢸⣧⣄⠉⠹⢿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠈⢹⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠄⢸⣿⣿⣿⣿⠟⠻⢿⣿⣿⣿⠛⢻⣷⡀⢸⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣶⢸⡿⣿⣿⠃⢰⣦⣄⠈⠻⣿⣦⣀⣿⡇⢸⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⠘⠃⠈⠁⢀⣘⣿⣿⣓⠄⠈⠻⣿⣿⡇⠈⢹⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⣾⣿⣿⣿⣿⣿⣿⣇⠄⣀⠈⠙⠃⠄⢸⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⣿⣷⣆⣀⣰⣾⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠄⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠉⠄⠙⠻⠟⠛⢃⡉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠄⠄⣤⣴⣶⣤⣤⡠⠃⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⢰⣆⠄⢹⣿⣿⣿⡟⠁⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⣰⣿⣷⡄⣠⣿⣿⣿⠄⠄⢸⣧⡉⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⠇⢠⣿⣿⣿⣷⣿⣿⣿⡿⠄⠄⣾⣿⠇⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣧⣀⢿⣿⣇⠉⢹⣿⡿⠿⠿⢿⣿ ⣿⣿⣿⣿⣿⡇⢸⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⠛⠈⢿⣿⡇⠸⠏⣥⣾⠇⢸⣿ ⣿⣿⣿⣿⡏⠁⢸⣿⣷⣿⣿⣿⣿⣷⣄⠙⠻⠇⠄⢸⣿⣇⢀⣾⠟⢛⣰⣾⣿ ⣿⣿⣿⣿⡇⠄⢸⣿⡿⠃⠄⣸⣿⣿⣿⣿⣧⡀⣀⠄⣿⣿⣿⠏⢰⣾⣿⣿⣿ ⣿⣿⣿⣿⡇⠐⠛⠛⠁⠄⣾⣿⣿⣿⣿⣿⣿⡇⣿⠄⠙⠛⠏⢀⣸⣿⣿⣿⣿ ⣿⣿⣿⣿⣇⣀⣀⣀⠄⢸⣿⣿⣿⣿⣿⣿⣿⡇⠉⣀⠄⠄⢀⣸⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠄⣸⣿⣿⣿⣿⣿⣿⣿⣷⡄⠿⣶⣶⣾⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡇⠄⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⠿⣠⣿⣿⣿⣿⣄⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⠇⢸⠟⠛⢻⣿⠛⠛⠃⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⡿⠿⢿⣿⡇⢠⡘⢀⣤⣾⣿⣦⣤⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⡏⢁⣾⣮⠉⠁⠘⣃⠄⢿⣿⣿⡿⠿⣤⡄⣿⣿⣿⢿⡉⡉⢹⣿⣿⣿⣿⣿⣿ ⣇⡘⣿⣿⣧⣴⡾⢿⠇⠠⣿⣿⡇⠸⠿⠇⠉⠿⣿⠻⣿⡿⢺⣿⣿⣿⣿⣿⣿ ⣿⡇⠘⣿⣿⣿⣧⣾⣀⣴⣿⣿⣧⣄⠄⣺⣷⣄⠉⠄⣿⡁⢸⣿⣿⣿⣿⣿⣿ ⣿⡇⢰⣿⡿⣿⠿⠃⢻⣿⣿⣿⣿⣿⡟⠛⠻⣿⡇⠄⢹⣧⠸⢿⣿⣿⣿⣿⣿ ⣿⡇⣸⣿⣿⣿⠄⠄⢠⣾⣿⣿⣛⠉⣴⡦⠄⢸⣷⣶⣾⣿⡄⢸⣿⣿⣿⣿⣿ ⣿⡇⣿⣿⣿⠋⠄⠄⠄⢻⣿⣿⣿⣷⣄⠄⠄⠉⠛⠿⢿⣿⡟⢸⣿⣿⣿⣿⣿ ⣿⡇⠹⠿⠟⢰⡆⢠⣶⣿⣿⣿⣿⣿⣿⡇⠄⣶⣶⣀⠄⠙⠃⢸⣿⣿⣿⣿⣿ ⣿⣷⣆⣀⣰⡾⠇⢸⣿⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣶⣶⣶⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⠄⣸⣿⣿⣿⣿⣿⣿⣿⣷⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡏⠁⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡇⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⠿⢉⣩⣭⣭⡉⠿⣿⣿⣿⠉⠉⠿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⢸⣿⣿⣿⡿⢿⣧⠉⣿⣿⢸⣿⣆⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⠇⢰⠋⠉⠙⣿⣄⣠⣍⠄⠉⣿⠸⣿⣧⣿⣿⣿⣿⣿⣿⣿⣿ ⢉⣍⠹⢿⣿⡇⠄⠘⠄⠄⣴⣿⣿⣿⣿⣰⣄⡉⣶⠸⣿⣯⠹⢿⣿⣿⣿⣿⣿ ⡘⢿⣿⣬⢹⡇⠰⠦⠄⠄⠄⠙⢿⡿⠿⣿⣿⣧⠉⠶⠸⣿⣦⠸⢿⣿⣿⣿⣿ ⣇⣈⡻⣿⡾⠇⠘⣿⡆⠄⠄⢀⣼⣿⡄⠈⢻⣿⣷⣦⣠⣿⣿⣧⠈⢹⣿⣿⣿ ⣿⣿⡇⢻⣧⡀⣠⣾⣿⣦⣴⣿⣿⣿⣿⣶⣼⢿⣿⡌⠻⣿⣿⣿⠆⢸⣿⣿⣿ ⣿⣿⡇⠄⣿⣿⣿⣿⣿⠋⠁⢠⣬⣿⣿⠛⢣⣤⠄⠄⠃⣀⣀⣀⣰⣾⣿⣿⣿ ⣿⣿⣷⡆⣿⣿⣿⣿⡿⠂⠄⠘⣿⣿⣿⣷⣤⡀⠄⣀⣶⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⡇⠈⢻⣿⠟⠁⠄⢀⣾⣿⣿⣿⣿⣿⣿⠂⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣷⣆⣀⣀⣀⠶⢠⣾⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⢠⣾⣿⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⠇⢠⣼⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠉⣠⣿⣿⣿⣦⠉⣿⣿⣿⠉⢹⣿⠉⢹⣿⣿⣿⣿ ⣿⣿⣿⡏⠉⣩⣹⣿⣿⠿⠘⠟⠻⣿⣿⠿⠃⠉⣿⣿⠄⣿⣿⣴⣾⣿⣿⣿⣿ ⣿⣿⣿⡧⣿⣿⡿⠿⣿⠄⣦⣤⣴⣿⣷⣤⡀⠄⠿⣿⣀⣸⣿⡉⢹⣿⣿⣿⣿ ⣿⣿⣿⡇⠙⣿⣇⣀⠉⢀⡀⠻⣿⣿⣿⡟⢀⡀⠄⣿⣿⠉⢿⣿⠼⢿⣿⣿⣿ ⣿⣿⣿⡇⠄⣿⣿⠿⢴⣿⡧⠄⢼⣿⡿⠰⢿⣿⠄⠿⠿⣷⡾⣿⣷⠸⢿⣿⣿ ⣿⣿⣿⡇⣼⣿⡇⣠⣼⣿⣿⣦⣾⣿⣷⡀⢘⣿⣷⣦⣄⣉⢁⣿⣿⡄⢸⣿⣿ ⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠈⠛⠛⠛⠛⢁⣸⣿⣿ ⣿⣿⣿⡇⢿⣿⣿⠟⠃⠈⠁⢸⣿⣤⣍⠉⠹⣿⣿⡇⠶⣶⣶⣶⣶⣾⣿⣿⣿ ⣿⣿⣿⣇⣈⣉⣁⣀⣀⠄⠄⠈⣿⣿⣿⣿⣦⡄⠄⠁⣀⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠚⣿⣿⣿⣿⣿⣿⡟⠄⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⢠⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠉⢰⣿⣿⣿⣿⣿⣿⣿⣧⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⢠⣼⣿⣿⣿⣿⣿⣿⣿⣿⡆⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡇⠄⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⡟⢉⣭⡉⠉⠉⣩⣤⣤⣭⡉⠿⣿⣿⣿⣿⡿⠿⢿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡏⢡⣿⣿⠃⢠⠘⠛⢻⣿⣿⣿⣆⠿⣿⣿⠋⣡⣤⢸⣿⣿⣿⣿ ⣿⣿⣿⡿⠏⣵⣿⡟⠁⠄⠄⣾⣦⣴⣄⠄⠉⢻⡆⣿⣿⢸⣿⠃⢸⣿⣿⣿⣿ ⣿⡿⠏⣡⣾⣿⣏⠄⣸⣧⠄⣿⣿⣿⣿⡗⠄⠈⠄⠿⣿⢸⣿⡆⢸⣿⣿⣿⣿ ⣿⡇⢠⣿⣿⣿⣤⣼⣿⣿⣿⣿⣿⠏⠄⠄⠄⠄⠄⠄⣿⢸⣿⡧⢸⣿⣿⣿⣿ ⣿⡇⠘⢿⣿⡿⠿⢿⣏⣿⣿⣿⣧⡀⠄⠄⠄⠄⢀⡀⠉⢈⣿⣷⢸⣿⣿⣿⣿ ⣿⣷⣆⣀⡈⠄⠄⠘⣿⣿⣿⣿⣿⣿⣷⢰⣶⣾⣿⣿⠿⠿⠛⢋⣸⣿⣿⣿⣿ ⣿⣿⣿⣿⡇⠄⠄⠄⢸⣿⣿⣿⣿⣿⣿⣦⢹⣿⣿⡇⠶⣶⣶⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣷⡆⠈⠄⢘⣿⣿⣿⣿⣿⡅⢠⣿⣿⣿⡗⠄⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⠄⢰⣿⣿⣿⣿⣿⣿⣿⠛⠛⣛⣛⣁⣶⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣷⡆⢸⣿⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⡄⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⠇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣷⡄⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⠄⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⣿⡿⠿⣿⣿⡏⠿⠉⠉⠉⠉⠿⣿⣿⣿⣿⠿⠉⡉⠹⢿⣿⣿⣿⣿⣿ ⣿⣿⣿⡿⠇⣴⣿⡏⠄⣰⣿⣿⣿⣿⣆⠉⣿⣿⣿⣰⣿⣿⢀⣸⣿⣿⣿⣿⣿ ⣿⣿⡏⢁⣿⡿⢻⠷⢸⡇⠄⢹⡟⠛⠙⠄⣿⣿⣿⢿⣿⡇⢸⣿⣿⣿⣿⣿⣿ ⡿⠏⣵⣿⣿⢷⡆⢀⣼⣿⣿⣿⣿⣦⡄⠄⣿⣿⣿⠄⣿⣿⠾⢿⣿⣿⣿⣿⣿ ⡇⢴⣿⣿⠇⠈⠁⢸⡿⠧⣿⣿⠟⠋⠠⠄⣿⣿⣿⣀⢸⣿⡆⢸⣿⣿⣿⣿⣿ ⡇⠘⢿⣿⣤⣤⣤⣾⣷⣿⣿⣿⡀⠄⢸⣆⠉⠿⠿⠿⢸⣿⣿⢸⣿⣿⣿⣿⣿ ⣷⣆⡀⠙⠛⢿⣧⣿⣿⣿⣿⣿⣷⣶⣶⣿⣿⣷⣶⣾⣿⠟⠋⢸⣿⣿⣿⣿⣿ ⣿⣿⣷⣆⡀⢸⡟⢛⣿⣿⣿⣿⣿⣿⣿⡿⠁⣀⣀⣀⣶⣶⣶⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡇⠸⠇⠻⣿⣿⣿⣷⣿⠟⠛⢃⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣇⡀⠄⣐⣿⣿⣿⣿⣿⣷⣒⠾⠃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⠘⣿⣿⣿⣿⣿⣿⣿⠃⠄⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣷⡀⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡏⠁⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⡇⣸⣿⣿⣿⣿⠿⣩⣤⣶⣤⡍⠉⣿⣀⠻⣿⣄⠿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣷⣿⡿⢹⡟⠉⢸⠿⠿⠿⠛⠙⠂⠉⣿⣶⣘⢿⣿⣭⠹⢿⣿⣿⣿⣿⣿ ⣿⡏⢉⣿⡇⠸⠇⢸⡇⠄⣀⣴⣦⣶⣿⡀⠉⣿⣿⣀⠹⣿⣷⡌⠹⢿⣿⣿⣿ ⣿⡇⣼⣿⡇⠄⠄⢸⣇⠄⠻⣿⣿⣿⣿⣿⡆⠿⣿⣿⡀⢸⣿⣿⠄⢸⣿⣿⣿ ⣿⡇⠻⣿⣿⡆⠄⢸⡿⠷⠄⠸⣿⣿⣿⣿⣧⠄⠉⠉⣴⣿⡿⠋⢰⣾⣿⣿⣿ ⣿⣷⣆⡈⠻⢿⣿⣿⣿⣟⣦⣤⣿⣿⣿⣿⣿⣿⣿⠻⠟⠃⢀⣰⣾⣿⣿⣿⣿ ⣿⣿⣿⣷⣆⣀⡈⠛⢿⣿⣿⣿⣿⣿⣿⣿⡟⢻⡟⠄⣶⣶⣾⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣶⠘⠁⢸⣿⣧⣤⡀⠘⠿⠿⠣⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣀⠄⣠⣿⣿⣿⣿⣿⣤⡀⠄⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠘⣿⣿⣿⣿⣿⣿⣿⡇⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠉⢰⣿⣿⣿⣿⣿⣿⣿⠃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⢠⣾⣿⣿⣿⣿⣿⣿⣿⡇⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⠇⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⠄⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣇⡀⣿⣿⡏⢹⣿⣿⠿⠉⠉⠉⠉⠿⣿⠸⣿⣷⡉⠿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⡇⢸⣿⣿⣼⣿⢉⣴⣿⣿⣿⠟⢂⡉⠄⣈⢻⣿⣦⣍⡹⢿⣿⣿⣿⣿⣿ ⣿⣿⡇⢸⣿⣿⢹⠿⠘⠋⠉⢙⣅⣀⣠⡄⠄⠉⣶⣈⢻⣿⣿⣮⠹⢿⣿⣿⣿ ⣿⣿⡇⣿⣿⣿⠄⠄⠄⠄⢠⣾⣿⣿⣿⡇⣰⡄⠉⣿⣀⠘⣿⣿⣷⢸⣿⣿⣿ ⣿⣿⡇⢿⣿⣿⡇⠄⠄⠄⠄⠈⠛⢿⣿⣿⣿⣿⡆⠿⠉⣴⣿⡿⠟⢸⣿⣿⣿ ⣿⣿⣇⡘⢿⣿⣦⣤⣤⣤⡄⠄⠄⣼⣿⣏⢻⣿⣿⣶⣾⣿⡿⠃⢰⣾⣿⣿⣿ ⣿⣿⣿⣇⡀⠉⢻⣿⡿⣿⣧⣤⣾⣿⣿⣿⣿⣿⣿⣿⣧⠄⢀⣰⣾⣿⣿⣿⣿ ⣿⣿⣿⣿⣷⣶⣦⣀⣀⠙⠛⢻⣿⣿⣿⣛⣿⣿⣦⢸⣧⡀⢸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣀⠄⠄⢻⣿⣿⣿⣿⣭⡁⠈⠉⣃⣸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⢛⣿⣿⣿⣿⣿⣿⣟⠃⠄⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠄⣼⣿⣿⣿⣿⣿⣿⣿⠄⣀⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⢀⣼⣿⣿⣿⣿⣿⣿⣿⡏⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⠄⣰⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡇⢀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⡏⢉⣿⣿⠃⠿⢩⣭⣭⣭⡉⠿⣿⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⡏⢁⣿⡟⢱⠶⢰⠟⢿⣿⡿⠿⠃⠿⣿⣿⠘⢿⣿⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⡏⢁⣿⣿⢳⡆⠄⠄⢀⣠⣼⣄⡀⠄⠄⣿⣿⣶⠸⣿⣦⠸⢿⣿⣿⣿⣿⣿ ⡏⢁⣿⣿⣇⡸⠇⠄⠄⠻⣿⣿⣿⡿⠃⠄⣿⣿⣿⣀⣹⣿⣤⠸⢿⣿⣿⣿⣿ ⡇⢾⣿⣿⠻⠇⢠⣾⠇⠠⣿⣿⡏⠠⣾⠄⠿⣿⣿⠿⠸⣿⣿⡄⢸⣿⣿⣿⣿ ⣷⡆⠙⢿⣿⣶⣾⡿⢇⣶⣿⣿⣧⠄⢻⣧⣄⣉⣩⣤⣴⣿⡿⢁⣸⣿⣿⣿⣿ ⣿⣷⣆⣀⡈⠹⣿⣧⣿⣿⣿⣿⣿⣷⣾⣿⡿⠙⠛⠛⣉⣀⣰⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡇⠄⢸⠁⣽⣿⣿⣿⣿⣿⣿⣿⡇⠄⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣷⡆⠘⠄⢻⣿⣿⣿⣿⣿⡁⢸⣿⡆⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⠄⢰⣿⣿⣿⣿⣿⣿⣿⠛⣋⣀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⠄⢸⣿⣿⣿⣿⣿⣿⣿⠄⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⠄⢸⣿⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⠄⣾⣿⣿⣿⣿⣿⣿⣿⣿⡆⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡏⠁⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⡟⠉⣩⡉⠉⣿⢉⡉⠉⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡏⠁⣿⣿⠇⢠⣿⣿⣿⣿⣷⣯⠿⣿⣿⠿⠿⡿⠿⢿⣿⣿⣿⣿ ⣿⣿⣿⡿⠏⣥⣿⡿⠃⠄⣺⡀⠄⠹⠟⠻⣿⡆⣿⣿⢠⣴⣿⢃⣸⣿⣿⣿⣿ ⣿⡿⠏⣡⣾⣿⣏⠄⢀⡀⣿⣿⣿⣿⣤⠄⠄⠄⠿⣿⢸⣿⣧⢸⣿⣿⣿⣿⣿ ⣿⡇⣴⣿⣿⠏⠄⢠⣾⡿⣿⣿⡿⠿⠋⠄⠄⠄⠄⣿⠠⣿⣿⢾⣿⣿⣿⣿⣿ ⣿⡇⢿⣿⣿⣷⣶⣿⣿⣿⣿⣿⡃⠄⠄⠄⠄⠄⠄⠿⠄⣿⣿⢸⣿⣿⣿⣿⣿ ⣿⣇⡀⠉⠛⠛⠛⣧⣿⣿⣿⣿⣷⣤⣤⣴⣿⣷⣦⣤⣴⣿⡿⢸⣿⣿⣿⣿⣿ ⣿⣿⣷⣆⡀⢸⠋⠉⠛⠛⠿⠿⠛⢣⡈⢻⣿⣿⠋⣉⣉⣀⣰⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡇⠸⠄⠘⣿⣿⣷⣤⣔⠛⠃⢸⣿⣿⡄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣇⡀⠄⢀⣸⣿⣿⣿⣿⣗⠄⠺⣿⠟⠋⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⠈⢿⣿⣿⣿⣿⣿⣿⡄⠄⣶⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⠄⢸⣿⣿⣿⣿⣿⣿⣿⡄⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⠄⣸⣿⣿⣿⣿⣿⣿⣿⣷⡄⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⣿⡿⠏⢉⠉⠿⣿⠉⢰⣿⣿⣿⣿⣧⠉⣿⣿⣿⡿⢿⣿⠇⢸⣿⣿⣿ ⣿⣿⣿⣿⡇⢰⣿⡆⣀⠉⣸⠃⠄⠈⠛⠛⠛⠃⠉⣿⣿⠄⣾⣿⢲⣾⣿⣿⣿ ⣿⣿⣿⣿⡇⢸⣿⡿⠿⢸⡏⢿⣿⣿⣿⣦⠄⠄⠄⣿⣿⣄⣹⣿⠿⢿⣿⣿⣿ ⣿⣿⣿⡿⠷⣿⡏⠄⢠⣾⣇⢀⣿⣿⡟⠃⢀⣤⡄⣿⣿⣿⣿⣿⣦⢸⣿⣿⣿ ⣿⣿⡿⠇⣼⣿⡇⢠⣾⣿⣿⣿⣿⣿⠇⠄⠸⣿⡇⠿⠿⣿⡿⣿⣿⠾⢿⣿⣿ ⣿⣿⡇⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣤⣿⣿⣦⣠⣭⣵⣿⣿⠄⢸⣿⣿ ⣿⣿⡇⠸⣿⡿⠿⠯⢿⠛⠛⠛⠻⢿⠿⠟⠛⠙⢿⡏⠉⠉⢉⣉⣁⣰⣾⣿⣿ ⣿⣿⣷⣶⣶⣶⡆⠄⢠⠄⠸⣿⣶⣤⣀⠈⠋⠄⢸⣿⡆⣶⣾⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣶⠈⢀⣠⣼⣿⣿⣿⣿⣦⡀⣙⣋⣀⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠄⢸⣿⣿⣿⣿⣿⣿⣟⠃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠄⢸⣿⣿⣿⣿⣿⣿⣿⡄⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠄⣼⣿⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡟⠉⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡇⠄⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⢉⣭⡉⠿⠿⣿⣿⠉⣉⡉⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⣠⣾⣿⣿⣿⣷⡄⠿⣿⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⢠⠟⠛⢻⡟⠛⣿⣷⡀⠿⠄⢻⣿⠿⢿⣿⣿⣿⣿⣿⣿ ⡏⠉⣭⡹⢿⣿⡟⠉⣸⠄⢀⣼⣿⣿⣿⣿⣀⠄⣶⠘⢿⣷⡸⢿⣿⣿⣿⣿⣿ ⣷⡶⣿⣿⣮⢹⡧⢼⣿⠇⠄⠻⠿⠿⠿⠿⣿⡇⠉⠶⠘⢿⣿⠈⢹⣿⣿⣿⣿ ⣿⣷⣆⡛⣿⣾⡇⢸⣿⡄⠄⠄⢀⣼⣆⠄⢹⣿⣦⣀⣀⣰⣿⣷⠈⢹⣿⣿⣿ ⣿⣿⣿⡇⣿⣏⠁⣹⣿⣷⣤⣴⣿⣿⣿⣧⣼⣿⣿⠁⠈⠿⣿⣿⠗⢸⣿⣿⣿ ⣿⣿⣿⡇⢸⣿⣿⣿⣿⡿⠿⢏⣿⣿⣿⣿⠿⢙⣿⢦⡄⣀⣀⣀⣰⣾⣿⣿⣿ ⣿⣿⣿⡇⠘⣿⣿⣿⡿⠃⠄⠘⢿⣿⣿⣿⣷⡛⠋⠄⣁⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣇⡀⠹⠿⠟⠁⠄⠄⣲⣿⣿⣿⣿⣿⣿⡂⣀⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣷⣆⣀⣀⣶⠄⠄⣿⣿⣿⣿⣿⣿⣿⠃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠉⢠⣾⣿⣿⣿⣿⣿⣿⣿⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡇⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⡟⢉⣾⣿⣿⣿⣿⣇⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡏⢁⠸⠋⠙⢻⠃⠄⠈⠄⠉⣿⣿⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿ ⠿⢿⢿⣿⡿⠇⢸⡄⠄⣤⣾⣿⣾⣷⣶⡄⣿⣿⢸⣿⣦⣿⣿⣿⣿⣿⣿⣿⣿ ⣶⣿⣏⢹⡇⢀⣼⣷⠄⠘⢿⣿⡟⢻⣿⡇⠉⣿⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⡙⢿⣿⠌⠁⢼⣿⣿⠿⠆⢿⣿⣿⠿⠿⣿⣦⡍⠶⠸⣿⠉⢹⣿⣿⣿⣿⣿⣿ ⣷⡆⣿⠄⠄⢸⣿⣿⣄⣴⣿⣿⣿⣦⣀⣈⣿⣿⣧⡀⢸⣷⠈⢹⣿⣿⣿⣿⣿ ⣿⡇⢻⣧⣄⣸⣿⠛⠉⠛⢿⣿⣿⣿⣿⡟⠛⠛⣿⣿⣿⣿⣷⠈⢹⣿⣿⣿⣿ ⣿⡇⢸⣿⣿⣿⣿⣄⠄⠸⣿⣿⣷⣤⣜⠻⠇⠄⠟⠙⠿⢿⣿⣧⢸⣿⣿⣿⣿ ⣿⡇⠄⣿⣿⣿⠏⠉⠄⣀⣼⣿⣿⣿⣿⣷⡄⠄⣶⣶⣀⣀⣉⣁⣸⣿⣿⣿⣿ ⣿⣷⡆⠻⠿⢋⣠⣀⢸⣿⣿⣿⣿⣿⣿⣿⡇⣀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣷⣶⣶⣾⡟⠉⢸⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡏⠁⢰⣿⣿⣿⣿⣿⣿⣿⣿⡇⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡏⠁⢰⣾⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡇⢠⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⢉⡉⠉⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⢠⠜⢿⣿⣿⣷⡆⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⢰⣦⡀⢀⡽⠛⠛⢿⡆⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⠇⣠⣼⣿⣿⣿⣷⣤⠄⢈⡁⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡏⢵⣿⣿⡿⠿⣿⣿⠿⠋⠄⠾⠿⠦⠉⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⡿⠏⠁⣿⣿⣿⡇⣾⣿⣿⡇⠄⠄⢰⣦⣼⣿⠃⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⡇⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣴⣿⣿⣿⣿⡇⣿⣿⣿⡿⠿⠿⢿⣿⣿ ⣿⡿⠇⣽⣿⣿⠃⠛⢿⣿⣿⣿⣿⡟⢻⣿⣿⣿⣿⡇⣿⠋⠉⣥⣤⣤⡌⢹⣿ ⣿⡇⢀⣿⣿⡇⠄⢰⣦⣤⣤⡀⠈⠻⠟⠻⣿⣿⣿⡇⠉⠄⠟⠛⠛⢋⣀⣸⣿ ⡏⠁⢺⣿⠛⠋⠄⠄⣻⣿⣿⣿⣷⣦⡀⠄⠛⢿⣿⣤⣴⡇⢰⣶⣶⣾⣿⣿⣿ ⣇⡀⠙⠋⢰⡆⢸⣿⣿⣿⣿⣿⣿⣿⣿⠄⣀⠄⠿⡿⠏⣀⣸⣿⣿⣿⣿⣿⣿ ⣿⣷⣶⣶⣾⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⡆⠿⣶⣀⣀⣀⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡿⠇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡇⠄⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠉⢀⠄⠄⠹⣿⣿⣿⡆⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠉⢠⣴⣿⣶⣶⣶⡄⠄⠈⢿⡇⠿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡟⠉⣸⣿⡟⠉⣿⣿⣿⣿⣷⠄⠈⠇⠄⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⠧⣼⣿⣿⣧⣶⣿⣿⣿⠁⠄⠄⠄⣀⡀⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡏⠁⣼⣿⣿⣿⣿⣿⣿⣿⣿⡖⠄⠄⠴⢿⣿⠄⢸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⡿⠇⢼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⣰⣿⣾⡇⠄⢸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⡇⠄⣸⡟⢿⣿⣿⡿⠿⢿⡿⢿⣟⡀⢸⣿⣿⡇⠄⢸⣿⡿⠿⠏⠉⠉ ⣿⣿⣿⡇⢠⣿⣧⣿⣿⣿⣿⣶⣤⣄⠘⠛⠃⠸⣿⣿⡇⣶⡾⠏⣥⣿⣿⠿⠛ ⣿⣿⡿⠇⢸⣿⣿⡿⠁⢠⣿⣿⣿⣿⣿⣦⡄⠄⢻⣿⣇⠉⢁⡞⢁⣰⣶⣶⣶ ⣿⣿⡇⠄⢸⠿⢋⣀⢸⣿⣿⣿⣿⣿⣿⣿⡇⣀⠄⣿⣿⡿⠃⢀⣸⣿⣿⣿⣿ ⣿⣿⣷⣆⣀⣰⣾⣿⢸⣿⣿⣿⣿⣿⣿⣿⣇⠉⠄⠉⠁⣀⣰⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡟⠉⢸⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡇⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢉⣩⡉⠉⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠉⢸⣿⡿⠛⠛⢃⡉⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⣠⣤⣶⣿⣧⡀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢰⡆⢿⣿⣿⣿⣿⢻⣇⠉⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠉⠸⠇⠄⠈⢿⣿⣿⡿⢿⡇⠿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⢠⣤⣀⡀⢀⣾⣿⣿⣿⣻⣷⣄⡉⠹⢿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠄⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⢸⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠄⣿⣿⣿⣿⡟⠛⠛⠿⢿⣿⣿⣿⣿⡇⠈⢹⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠄⢸⣿⣿⡿⠛⢿⣦⡀⠄⠈⠙⢿⣿⣷⡀⢸⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⢀⣾⣿⣄⣀⣠⣼⣿⣿⣷⡀⠄⠈⢿⣿⡇⠸⢿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡟⠉⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⣀⠄⠙⠇⠄⢸⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣶⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠄⣿⣷⣆⣀⣰⣾⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠶⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'lol") {
        client.say(channel, `test132`)
    }

    if (message == "'alien") {
        if (!block) {
            client.say(channel, `AlienPls ⠀*⠀ ｡⠀ ⠀ ⠀ ⠀⠀ﾟ⠀｡ ⠀ ⠀⠀ ☆⠀ ⠀⠀⠀⠀⠀⠀ ･ﾟ⠀ ⠀  ★⠀ ｡･⠀⠀⠀⠀ﾟ⠀⠀｡⠀ ⠀ ★⠀ ⠀ ･･⠀⠀ ﾟ⠀ ⠀ ⠀ *⠀ﾟ⠀⠀⠀⠀ ｡･⠀ ⠀ ⠀★⠀ ｡⠀⠀⠀⠀⠀ ∴⠀ ｡ ⠀ ∴⠀⠀ ｡⠀ ⠀ ⠀ ﾟ⠀ 🔭 BatChest WOW I CANT BELIEVE MY EYES!  `);
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }


    if (message == "'artixw") {
        if (!block) {
            client.say(channel, `⣋⠄⠄⠄⠄⠄⠄⠄⠄⠄⢹⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⠿⠿⠛⠛⠓⠄⠄⠐⠲⠦⣿⣿⣿⣿⣿⣿⣿⣿⡿⠄⠄⠄⠄⠄⠄⣀⣀⠄⠄ ⣀⣀⣀⣀⡀⣀⠄⠄⠄⠄⣹⣿⣿⣿⣿⣿⣿⡟⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⣿⣿⣿⣿⣟⡛⣃⣀⣀⣾⣿⣿⣿⣿⣿⣿⣿⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠇⠄⠠⠤⠄⠄⠄⠄⠄⠄⠠⠤ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⣿⣿⣿⣿⡿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣀⣤ ⣿⡿⠋⠄⠄⠄⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠘⠻⠿ ⠉⠄⠄⠄⠄⢼⡿⣿⡿⣿⣿⣿⣿⣿⣿⠿⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⠄⠄⠄⠄⠄⢀⣀⣀⡀⠄⠄⠈⠉⠉⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⠄⠄⠄⠄⠈⢻⣿⣿⣿⣿⣶⣦⣀⣀⣄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⣀⠄⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣀⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⠂⠄⠄⠄⠄⠄⠄⠄⠄ `);
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'xqcl") {
        if (!block) {
            client.say(channel, `⣿⣿⣿⣿⠿⠛⣛⣛⠛⠿⣿⣿⡿⠿⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⠋⢁⣾⣿⣿⣿⣿⣷⣦⣭⣶⣿⣿⣿⣷⣄⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⡿⠁⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣜⢿⣿⣿⣿⣿⣿⣿⣿⣿ ⢀⣤⣤⠉⠄⣀⣀⣀⠈⠉⢙⣿⣿⣿⣿⠛⠋⠉⠉⠉⠄⠙⣿⣿⣿⣿⣿⣿⣿ ⢸⡿⠛⠁⠄⠄⠄⠄⠄⠄⠄⢹⣿⣿⠋⠄⡄⠈⠉⠙⠻⡆⢹⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣶⣦⣤⡤⠄⣀⣠⣼⣿⣿⣦⣀⣤⣤⣤⣴⠖⣠⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢉⡙⣿⣿⣿⣿⣿⣿⣿⡇⢿⣿⣿⣿⣿⣿⣿⣿⣿ ⠙⣿⡿⠛⠿⠿⠿⠿⠿⣧⠉⣹⣿⣿⣿⣿⣿⣿⣿⣿⡌⢿⣿⣿⣿⣿⣿⣿⣿ ⠄⠘⠿⠷⠤⢄⣀⡀⠄⢀⣀⣀⣉⣁⣈⣉⣉⣉⣉⡛⢁⣾⣿⣿⣿⣿⣿⣿⣿ ⣀⣤⣤⣤⣤⣤⣀⠉⠻⢿⣿⣿⡿⠿⠿⠿⠿⠿⢋⣥⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠉⢁⣤⣴⣶⣶⣦⣄⡀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⡿⠿⢿⣿⣿⣿⣿⣿⣷⡄⠈⣿⣿⣿⣿⣿⣿⣷⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿ ⢀⣤⣶⣤⡈⠹⣿⣿⣿⣿⣿⠟⠉⣉⠙⠻⣿⣿⣿⠁⠄⣾⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⡿⠛⢁⣰⣿⣿⣿⣿⣿⠄⢻⣿⣿⡆⠈⢻⠇⠄⢰⣿⣿⣿⣿⣿⣿⣿⣿ `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }


    if (message == "'xqctf") {
        if (!block) {
            client.say(channel, `⣿⡿⡿⠐⢭⣭⣴⣿⣿⣿⡿⠿⢿⣿⣿⣿⣿⣿⣿⣷⣤⣤⡉⠉⠡⠤⢿⣿⣿ ⠛⠏⠄⢀⣿⣿⣿⣿⣿⣿⣦⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠈⠉⠙ ⠄⣤⣴⣿⡿⠛⠋⠉⠄⠄⠄⠄⠉⠛⢯⣽⡿⠿⠿⠿⠛⠛⠻⠿⡿⠛⠂⠄⠈ ⣤⠛⠉⢻⡀⣠⣴⣶⣶⣤⣤⣤⣤⣴⣶⣦⣤⣤⣤⣤⣤⣤⣠⣴⣿⣶⣤⠄⠄ ⣿⡀⠄⠈⠉⠄⠄⠄⠄⠉⠉⠉⠉⠛⣿⣿⣿⡟⠋⠉⠉⠉⠙⠛⠛⠄⠄⠄⠄ ⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣠⣿⣿⣿⣧⠄⠄⠄⠄⠄⠄⢀⣀⣀⠄⠄ ⣿⡏⠄⣾⣿⣶⣶⣶⣶⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄ ⣿⣿⠄⢹⣿⣿⣿⣿⡿⠟⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠄⢰ ⠁⠄⠄⠨⠉⠻⣟⠄⠄⠰⣿⣛⣋⣀⣈⠙⠛⠛⠛⠛⠛⢛⣻⣿⣿⠙⡇⠄⢸ ⣷⣀⡀⠄⠈⢷⣿⣶⣤⣄⡿⣿⣿⣿⣿⣿⣿⣷⣶⣾⣿⣿⣿⣿⣿⣦⣧⡄⠸ ⣿⣿⣷⡀⠂⠄⠙⢿⣿⣿⣿⣷⣬⣍⣽⣿⣿⣿⣿⠿⢿⣿⣿⣽⣿⣿⣿⣷⠄ ⣿⣿⣿⣿⣶⣆⣀⣀⠉⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄ ⣿⣿⣿⣿⣿⣿⣿⣤⠐⢀⣀⠈⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⢀ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣤⡒⠒⢀⣀⠈⠉⠛⠻⣿⣿⣿⣿⣿⣿⠛⠁⢀⠄  `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'xqcs") {
        if (!block) {
            client.say(channel, `⣿⡏⠄⠄⠄⠄⠄⠄⠈⠉⠄⠉⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⠟⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠉⠉⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⠄⠄⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋ ⠄⠄⠄⠄⣀⣀⣀⡀⠄⠄⠄⣷⠄⠄⠄⠄⠄⠄⠉⠻⣿⣿⣿⣿⣿⡟⠁⣠⣾ ⠄⠄⠄⢀⣿⣿⣿⣿⣦⣴⣶⣤⣄⡀⠄⠄⠄⠄⠄⠄⣀⣹⣿⠟⠉⢠⣾⣿⣿ ⠄⠄⠄⠰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣤⣀⣀⣤⣿⣿⣿⣶⠄⣼⣿⣿⣿ ⠄⠄⠄⠄⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠄⣿⣿⣿⣿ ⠄⠄⠄⠄⠙⢿⣿⣿⣿⣿⣿⡿⠟⠛⠛⠛⣿⣿⣿⣿⣿⣿⡟⢁⣼⣿⣿⣿⣿ ⠄⠄⠄⢀⣤⡤⠯⠭⠽⣿⣭⣤⣄⠄⣤⣾⣿⣶⣿⣿⣿⣿⡇⢸⣿⣿⣿⣹⣿ ⠄⠄⠄⣿⣿⣧⣠⡦⣀⣈⠙⠻⣿⣇⠙⠛⠿⠿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿ ⠄⠄⢸⣿⣿⣿⣿⣶⣿⣿⣿⣿⣿⣿⣿⡇⢀⣀⡀⠙⠛⠛⣡⣿⣿⣿⣿⣿⣿ ⠄⠄⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣹⣿ ⠄⠄⠄⠈⠿⣿⣿⣿⣿⣿⣿⣿⡿⠁⣴⣿⣿⣯⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'xqcinsane") {
        if (!block) {
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⣿⠿⡛⠄⠄⠄⠒⠋⠙⠻⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠘⣫⣒⣭⣤⠖⢁⢄⡀⠄⠄⠄⠈⠙⢿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢏⣴⣿⣿⢿⢟⣥⢞⣿⠋⣠⣤⣀⣀⠄⠄⢸⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢣⣿⡿⠛⠟⣡⡟⣰⣿⣥⣾⣿⣿⣿⣿⣿⡀⠘⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⣘⣉⣀⣀⣈⡉⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡎⠖⠉⠁⠁⠏⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠄⠄⠄⠄⠄⠉⠻⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⠟⠋⣡⡧⠄⠄⠄⠄⠄⠉⠉⣠⣬⣿⡟⢁⣴⣿⣿⣿ ⣿⣿⣿⣿⠟⠋⠉⠁⠄⠄⠄⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠁⢉⣾⣿⣿⣿⣿⣿ ⢋⣭⠍⠄⠤⠤⠤⡀⠄⠄⠄⢽⣦⣤⣤⣤⣤⣤⣤⣭⣵⠁⢾⣿⣿⣿⣿⣿⣿ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠙⠻⢿⣿⣿⠿⠛⠋⠑⠄⠈⣿⣿⣿⣿⣿⣿ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠘⣿⣿⣿⣿⣿ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⡤⠄⠄⠄⠁⡹⣿⣿⣿⣿ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣠⣄⣀⣼⣿⡇⠄⠄⠄⢄⢹⣿⣿⣿  `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }




    if (message == "'alienpls3") {
        if (!block) {
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠁⣤⠙⢿⣿⢟⡉⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⡄⠄⠄⠄⢸⡏⠈⠄⠄⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⡻⣆⢤⠤⣿⡧⣄⣀⡔⣫⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⣌⠓⠖⢒⣁⣵⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠚⣿⣷⣶⣿⡿⣾⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣧⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⢻⣿⣯⠛⠛⠟⠻⣯⣿⡗⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⣛⢈⣷⡦⡖⣶⣶⢛⣡⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢘⣛⠳⣻⢋⣛⡛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣛⣻⣛⣝⣿⣿⣃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠛⠛⢛⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠛⢿⣷⡂⢊⡉⠉⢻⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠉⠈⣟⠄⠈⠁⠄⢈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣯⢄⡀⣠⣿⣄⡀⢀⣠⣿⡿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣹⣯⣭⣥⣿⢿⡛⣽⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣯⣾⣿⣿⣿⣯⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣧⠺⣿⣿⠿⠿⢿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢹⣿⣯⠉⠂⣶⣿⡟⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣿⡇⣆⡙⢿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⣽⣯⣾⣿⢁⢉⣻⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣙⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⣿⣿⡿⢛⡛⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⡏⠄⠓⢹⡟⠄⠙⠁⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣧⠄⠄⠸⡇⠄⠄⠄⣠⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⡣⢀⣂⠄⠄⠄⠠⣐⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣢⣤⣀⣠⣾⣾⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⢹⣿⣿⣿⣿⡉⢻⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣿⣿⣿⣿⣿⡇⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣎⣧⠄⠄⡀⠙⣿⠿⣿⢺⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⣿⣷⣼⡧⠛⢳⢠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢘⣻⣿⢹⢁⣁⣹⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣛⣿⣻⣾⣯⣭⣭⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⣄⢹⣿⠟⣡⠄⠈⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠄⣸⣿⠄⠁⠄⠄⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⡽⣶⡚⠿⠿⣦⣤⣤⣾⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⡋⠓⠒⠁⠄⢀⣰⣭⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⣠⣴⣿⣯⣝⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⠿⠿⠿⠄⢹⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⣂⠄⠄⠄⠄⣠⢵⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣦⣀⢠⡀⣠⣿⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢻⣿⣿⢸⢷⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣛⣻⢸⡌⢀⠹⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣜⣛⣛⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡋⢠⡌⢿⣿⢋⡤⠄⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⠄⠄⠄⣼⣇⠄⠄⠄⢀⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣷⢶⡚⠿⠟⣷⠶⠶⠿⡿⣻⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣅⢈⠓⠊⠁⡀⣀⣬⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣫⡿⣿⣶⣄⣴⣿⣯⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣱⣿⡇⠙⠿⢿⡿⢟⣦⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⡟⣿⣿⣿⡇⠄⠄⠄⠰⠿⢿⣿⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣧⣯⣭⣽⢹⣄⢀⣠⡀⢀⣤⡭⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⠟⣿⡇⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣘⣛⡐⣿⡿⣉⣉⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣭⣽⣷⣿⣿⣾⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⡟⢋⡍⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠄⠰⢸⡏⠄⠈⠁⠄⣿⣿⣿⢾⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠄⣸⣧⡀⠄⠄⣼⣿⣿⡿⣾⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡳⢌⣋⡨⠉⠈⠉⢁⣦⣾⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣴⣦⣀⣀⣴⣾⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢰⢸⣿⣿⠏⣽⣿⣿⡷⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣸⢸⣿⣿⠄⠛⠛⢟⣵⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡈⡁⠈⠄⠄⠄⣴⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⢺⢦⣌⠖⣾⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣎⣀⠙⡗⠛⠛⣧⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣭⣭⣴⢿⣿⠿⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠤⡿⠁⠐⠋⠄⣿⣿⣿⣿⢻⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⢀⣇⠄⠄⢀⣰⣿⣿⣿⣿⣼⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢟⠛⢳⢶⠟⠛⠋⡉⢝⣵⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣉⠁⠄⣀⠰⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣽⢿⠞⣺⣿⡿⠾⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣮⣥⣶⣮⣦⣕⣦⣀⣀⣸⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡱⣯⠁⠙⣿⣿⣿⢏⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣬⡧⡐⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣾⣯⡿⢿⣷⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡧⣶⣿⡿⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠫⠠⣿⠋⠄⠖⠘⣿⣿⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠄⡇⠄⠄⠄⢰⣿⣿⣿⣿⣹⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⡃⠄⠄⠄⠈⠉⠉⢩⣫⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣯⣁⠄⢀⢠⡴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢻⣿⣿⣿⡟⢻⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢻⣿⣿⣿⣿⠐⣿⣏⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡘⡍⠉⣿⣿⣴⣿⣿⢾⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⡆⢠⣿⣿⡗⣀⣭⣾⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢠⠘⠛⢿⣇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣝⡳⣷⣿⡿⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⢩⡿⠋⠠⠆⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⢀⡇⠄⠄⠄⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⢿⠟⡒⠒⠈⠉⠉⠛⡹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⡋⠄⠄⠄⢠⣠⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠓⠉⠄⣲⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣧⣻⣩⢞⣯⣿⣿⠟⠉⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⢿⣿⡿⠟⣴⣶⣷⢟⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡀⢀⢸⣯⣿⣵⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⡛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢶⣾⢟⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⡿⣿⣿⡿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠒⣿⠏⠐⠓⠄⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⣠⣯⠄⠄⠄⣠⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢋⣋⠁⠄⠄⠁⠈⢁⣩⣾⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡷⣴⣄⣠⣰⣴⡾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣱⣿⣿⣿⣿⠙⣿⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⢹⡿⣿⣿⣿⣁⠘⣟⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣬⠄⠄⢨⣿⣥⣤⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢿⣦⡞⠿⣿⡇⣶⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣼⣿⠠⣎⣉⣯⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣶⣽⣿⣿⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠰⠆⠸⣿⢫⠄⠄⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣇⠄⠄⣸⣯⠄⠄⠄⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣝⠉⢧⣙⣋⠵⠖⡚⢏⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⡟⠛⡆⠄⢀⣤⡶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣻⣿⣿⣿⡄⠈⠻⠿⢛⣻⣮⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣙⣉⡛⣿⠄⠄⢰⣿⣿⡏⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣄⢀⡀⡈⣹⡱⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡿⢿⢸⠉⠁⢻⢱⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣷⣬⣿⣿⣷⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⡿⢛⠛⢿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠙⠁⠈⣿⠣⠆⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⢿⠧⣀⣀⣴⣿⡄⠄⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣅⠄⠱⠬⠍⠜⢛⣩⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣽⣿⣦⣤⣾⣾⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢱⢠⣿⣿⣿⣿⣷⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⢳⣏⣸⡛⠻⠿⠿⢿⡷⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣬⡽⣷⣤⣤⢠⣾⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢱⢿⣿⠟⠘⠻⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠸⣼⣼⣆⣒⣣⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿��⣿⣿⣿⣿⣿⣿⣿⣷⣿⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⡏⠰⠆⠈⢻⣿⡋⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢻⣿⣷⠄⠄⠄⣸⡏⠁⠄⣽⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣅⠈⠙⢶⡚⠛⢻⡤⣲⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣯⣦⣀⠈⣭⣱⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣾⣟⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣹⣿⣿⣿⣿⠙⢻⢏⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢛⠛⣫⣅⠄⣼⡎⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠎⣿⣿⢿⣀⡈⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⣾⣬⣇⢿⣾⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢹⣿⠃⠲⠂⠙⣿⣟⠉⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣸⡿⢇⠄⠄⢀⣿⡀⠄⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣍⡄⠄⠄⣙⣛⣳⢖⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣻⣶⣄⣈⣭⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣼⣿⢹⣿⣿⣿⢿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣽⣿⡍⢿⣿⡿⢲⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡜⡿⠿⣧⣤⢤⡄⣾⣾⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣗⣇⠄⣨⢇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢹⣬⣿⣿⣿⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⡿⢋⡛⢿⣿⣿⠟⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣹⡇⠄⠁⠄⣻⠃⠃⠄⢈⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡻⣤⣀⣴⣿⣦⣀⣠⢾⣾⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢮⣹⣶⣶⣾⡫⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢡⣿⣿⣿⣿⣿⣿⣮⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣸⣿⣿⣿⣿⣿⣿⡟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⢛⣍⠛⠻⣿⣿⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣿⣇⣿⡿⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠸⣭⢿⡯⣿⣷⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⠟⠛⢿⣿⡿⠛⠙⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢎⠄⠉⠄⣿⠄⠉⠄⢀⣿⣹⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣜⢆⣀⢴⣿⣦⣀⣤⣾⢟⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣝⣷⠶⠾⣿⣭⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⢴⣿⣿⡿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡦⣩⣭⣀⠈⠛⡟⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡸⣿⣿⡙⠛⣿⣇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⣻⣿⣼⡇⢿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣡⣽⡎⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⡞⢉⡉⢻⣿⡿⠛⠻⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠁⢸⡟⠘⠁⠄⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡻⣦⡴⣿⠿⣄⣠⣴⢿⣾⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣎⣝⠒⣚⣟⣭⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢱⣿⣿⣿⣿⣿⣮⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣸⣿⣿⣿⣿⣿⣟⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠵⢹⡟⠛⠛⠻⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⢿⣿⣗⠇⠾⡿⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢘⣻⣗⢉⣧⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣟⣛⣫⣬⣭⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⢡⡈⠹⣿⡿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢼⣿⣆⠄⠄⢀⣿⠐⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡙⠻⣷⣞⠻⠿⣧⣤⣴⣹⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣆⣝⠻⢿⣿⣿⣩⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡱⢿⣿⣿⠅⠙⠿⢿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⢩⣽⣶⣶⣴⣳⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣼⡿⠿⢿⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢷⣿⣿⣶⡸⠛⢛⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣬⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢩⡍⠙⣿⣿⠟⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡼⣿⣇⠄⠄⠄⢸⡟⠃⠄⢸⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣜⢿⢶⣤⠴⣿⢷⣀⡠⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣰⡙⠳⢶⠫⣽⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢻⣿⣿⣿⣿⣿⡎⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢇⣿⣿⣿⣿⣿⣿⢿⡹⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⢻⠏⠉⠻⢿⣿⣿⣾⡟⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠔⢶⣸⣶⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣆⣸⣿⣿⣿⢼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣞⣿⣿⣣⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'thejungle") {
        if (!block) {
            client.say(channel, `The Jungle isnt just a place; its a sanctuary where we put our problems aside and enjoy watching the gaming warlord juicer. Youve changed more lives than you think Mr. Cow, xqcL   `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'smorc") {
        if (!block) {
            client.say(channel, `⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
                        ⠀⣠⣴⣶⣶⣿⣿⣿⣶⣶⣤⣄⡀⠀⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣯⢿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣦⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣯⣽⣶⣶⣾⣕⣝⣧⣣⢫⡋⡿⠿⣇⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⢖⢬⣍⠻⣿⣿⡜⢧⠑⣴⣿⣿⣦⠀⠀
        ⠀⠐⠻⣿⣿⣟⣛⡻⠶⣦⣻⣿⣿⣿⣿⡗⢿⣿⣿⢙⠛⣃⠬⢄⠉⠉⠀⠀⠀⠀
        ⠀⠀⠀⠈⠻⣿⣿⠁⠀⣶⣿⣿⣿⣿⣿⣏⣚⣏⣴⢟⣟⠁⣰⠀⡇⣄⣽⣿⡄⠀
        ⠀⠀⠀⠀⠀⠈⢿⣶⡾⠿⢻⣿⣿⡛⠋⠁⣠⢏⣵⣿⣿⣿⣿⣷⣿⡘⡜⡿⠃⠀
        ⠀⠀⠀⠀⠀⠀⠀⠙⠿⣿⡿⣿⢻⡧⢀⡞⣡⣿⣿⣿⣿⣿⣿⣿⡿⣷⢁⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡿⣼⣳⢿⣾⣿⣿⣿⣶⣶⣶⣶⡶⠶⣶⣍⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢷⣿⣿⣿⡿⢋⠀⢶⠂⠶⠀⠄⠄⡤⣤⠀⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠈⣿⣿⠟⠀⣰⡇⢀⡀⠀⠠⠀⠀⠀⠉⣤⠀⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇⠼⠷⢿⣇⢸⣷⡀⣾⡆⣾⣷⠠⡿⠆⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣽⣿⣷⣿⡿⣿⣷⣶⣶⣶⣶⣶⣶⣶⣶⣶⣷⣦⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⠛⣿⣿⣿⣶⣤⣤⣈⡉⠉⠉⠉⠉⠉⠉⠉⠁⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣯⣭⣯⣭⣤⣶⣶⣶⣶⣦⣤⡈⠁⠀⠀
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠛⠿⠛⠛⠁⠈⠉⠙⠛⠁⠀⠀⠀
        
           `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'traffic") {
        if (!block) {
            client.say(channel, `🏍 🚑 FeelsDankMan 🚜 🚓 🚛 🚕 FeelsDankMan 🚚 🚗 🏎 🚜 🚓 🏍 FeelsDankMan 🚕 🚜 🚕 🚛 🚕 🚚 🚗 UH OH, I'M LOST IN A TRAFFIC DANK 🚕 🚜 🚕 🚓 🚛 🏎 🚑 🚒 FeelsDankMan 🚓 🏍 🚓 🚜 FeelsDankMan 🏎 🏎 🚜 FeelsDankMan 🏎 🚜 🚓 🚜 FeelsDankMan 🚑 🚑 FeelsDankMan 🚗 🚗 🚚 FeelsDankMan 🚗 🏎 🏎 🚚 🚛 FeelsDankMan 🚓 🚜 🚕 🚜 🚙 🏍 FeelsDankMan 🚙 🏍 🚌 🚲 FeelsDankMan 🚌 🚐 🚌 🚒`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'tf") {
        if (!block) {
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⠛⠛⠛⠛⢛⡛⠛⠛⠛⠛⠛⠛⠛⠛⠿⠿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⡿⠋⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣤⣉⠛⢿⣿⣿ ⣿⣿⣿⢁⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡄⣿⣿ ⣿⠟⢁⣚⣻⣿⣿⣿⡟⢁⣀⣀⡲⢦⡝⢿⣿⣿⠿⠛⠉⠉⣙⣻⣿⣿⣷⣌⠻ ⢁⣴⡿⣩⣶⠶⣭⣝⣛⣛⣭⣿⣿⣷⣶⣿⣿⣿⡆⢾⣿⣿⠿⠟⣻⣟⣿⣿⡆ ⠈⣿⣇⣿⣭⠰⣮⣍⡛⠿⢿⣿⣿⡏⣼⢿⢿⣿⣿⡶⣉⣻⣿⣿⠏⢻⣿⣿⠃ ⣦⡈⢻⣿⣿⣧⡈⣝⡉⠻⢷⣶⡌⣩⣛⣛⠻⠿⠥⠾⠿⡛⢋⣁⣄⢸⣿⠃⣼ ⣿⣿⣆⢹⣿⣿⣷⣍⠳⣶⣶⣤⢀⣙⠛⠛⠉⠛⠛⠘⠛⠛⠉⠁⠄⢸⣿⠄⣿ ⣿⣿⣿⣦⡙⢿⣿⣿⣷⣮⣙⠛⢼⣿⣿⡇⣶⣶⡆⣤⣤⣠⠄⡤⠄⣼⣿⠄⣿ ⣿⣿⣿⣿⣿⣦⣈⠛⠿⣿⣿⣿⣷⣶⣮⣥⣬⣭⣥⣭⣤⣤⣶⣶⣿⣿⣿⡄⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣶⣤⣌⡙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣬⣍⣉⡛⠛⠿⠿⠿⠿⠿⠿⠛⣁⣼⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣶⣶⣶⣿⣿⣿⣿

        `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }



    if (message == "'cockascii") {
        if (!block) {
            client.say(channel, `░█████╗░░█████╗░░█████╗░██╗░░██╗
        ██╔══██╗██╔══██╗██╔══██╗██║░██╔╝
        ██║░░╚═╝██║░░██║██║░░╚═╝█████═╝░
        ██║░░██╗██║░░██║██║░░██╗██╔═██╗░
        ╚█████╔╝╚█████╔╝╚█████╔╝██║░╚██╗
        ░╚════╝░░╚════╝░░╚════╝░╚═╝░░╚═╝`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'spider") {

        if (!block) {
            client.say(channel, `⣿⡿⠏⣩⣷⣟⣁⠄⢸⣷⣿⡇⣀⢹⣿⠄⠄⣈⠻⣷⡍⠿⠿⢿⣿⣿⣿⣿⣿ ⣿⡇⣿⢟⣹⣿⣷⣞⣁⠶⣹⡇⣿⢸⣿⣿⡇⠿⣶⣶⣈⠻⣷⡌⢹⣿⣿⣿⣿ ⣿⣷⣶⣾⣿⣿⣿⣷⣿⢸⠟⣁⣿⣘⣃⣘⢻⣇⣿⣿⣿⣷⣶⣶⣾⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣿⣿⣿⣿⣿⣶⠻⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣏⣩⣥⣿⠟⠛⠃⣀⣀⣀⣴⣦⠹⢿⣷⡍⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⡏⣽⢿⣟⡱⠖⣠⣾⠟⢿⡟⣛⢿⣿⣄⠄⣘⠣⡍⠿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣷⣶⣾⣿⣇⣘⣛⣁⢠⣾⡇⣿⣘⣛⠛⢧⣍⠄⠹⣷⣍⠹⢿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⡇⣶⣿⣿⣿⣶⣘⢻⡇⣶⣈⠻⡷⢸⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣿⣿⣿⣿⣿⣿⣶⣶⣿⣿⣷⣶⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⡿⠿⠿⠏⣡⣴⣿⡿⠏⠄⠄⠄⠄⣴⣶⣄⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⡏⣥⣿⢟⣛⣛⣁⠶⢀⣶⣶⡦⢴⣦⣿⡟⢹⣷⣍⠿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣷⣶⣶⣾⣿⣿⠿⣰⡟⣿⡇⣶⣘⣛⢿⣧⡀⠘⢻⣆⠿⠿⢿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⠇⣾⡏⠄⣿⡇⣿⣿⣿⣶⣘⢻⡇⣶⣈⠻⣿⢸⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⣰⡟⣃⣘⣛⣃⣿⣿⣿⣿⣿⣶⣶⣿⣿⣷⣶⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣇⣻⣃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿��⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⡿⠿⠟⢉⠸⠿⠃⠄⠄⠄⠄⠙⣧⡍⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⡏⣭⣿⣧⣾⢟⣛⠄⣠⣄⣀⠄⠄⠄⢾⡿⢻⡄⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣷⣶⣿⣷⣶⣾⣿⢸⣿⣿⡟⣃⢠⣶⣄⠶⣶⣈⠳⣍⠿⠿⢿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⣸⠇⣿⣧⣿⣘⣛⢻⡇⠿⣿⣶⣈⠻⡷⢸⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡇⣾⡇⣶⣙⣃⣿⣿⣿⣶⢸⣷⣍⣿⣿⣷⣶⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡏⣡⡟⣁⣿⣿⣿⣿⣿⣿⣿⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⢿⠇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣷⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⡿⠏⣩⣭⣭⣤⣄⠄⠄⠄⠄⠄⢠⡄⠘⣃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⡏⣥⣾⡟⠑⣠⡽⠛⢳⡄⠄⠄⠄⠄⢠⣤⡍⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣷⣆⣙⣛⣛⣛⣁⢠⣶⣶⣄⠄⠄⡀⢸⡿⠣⣭⣍⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠉⣼⣿⣿⡏⣀⢹⣿⣄⠶⣶⣈⣛⠳⡌⢹⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⣸⡟⣿⣿⣶⣿⢸⡿⢻⡇⣿⣿⣿⣷⣶⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣧⣾⣟⣁⣿⣿⣿⣿⢸⣷⡜⢣⣍⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡏⣡⣿⠇⣿⣿⣿⣿⣿⣶⣶⣶⣘⢻⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣇⣙⣁⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣈⣃⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⡿⠿⠿⠿⠘⠃⠄⠄⠄⠄⢸⣇⠿⠿⢉⣽⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣟⣛⣛⠛⣶⡄⠄⠄⠄⠄⢸⣿⠛⣛⣛⣋⣹⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⡿⠿⠿⠿⠿⢩⠼⢿⡇⠄⠄⠄⠄⢸⣿⣷⣍⠿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⡏⢡⢚⣛⣛⣛⣁⢠⣤⣶⡄⠄⢠⡄⢸⡿⣛⣛⠣⣭⣭⡍⢹⣿⣿⣿⣿ ⣿⣿⣷⣶⣾⣿⣿⣿⠿⣸⣿⣿⠇⣀⣀⢠⣶⡄⠿⣿⣶⣶⣶⣶⣾⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⣾⣟⣁⣶⣶⣿⣿⢸⣿⣿⣇⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣧⣾⣟⣁⣿⣿⣿⣿⣿⣈⠻⡟⠻⡇⠿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣧⣙⣁⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⠰⣷⡍⢹⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣈⣃⣸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⡿⠿⣿⣘⢿⣷⡄⠄⠄⠄⠘⠛⠃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⢿⣦⣭⣉⣸⡿⠃⠄⠄⠄⢸⡇⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣷⣶⣶⣙⣛⠉⢠⡄⠄⠄⠄⠘⢣⣭⣭⣭⡍⠹⠿⢿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⢩⣼⠃⠄⠄⠄⠄⢠⣾⣿⣿⣄⢀⣿⡷⢸⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⢩⣾⣿⣿⣷⡄⠄⢠⣤⣿⡏⣈⣛⣛⣋⣰⣾⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⠇⢸⠟⣡⣼⠟⢻⡟⣀⢸⣿⣿⡇⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡿⠇⣸⣦⣾⣿⣷⣼⣿⣁⣿⣈⠻⣿⣿⡇⠿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣇⣘⣛⣛⣉⣿⣿⣿⣿⣿⣿⣿⣶⣶⣈⠻⣧⡍⢹⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⠈⣷⡌⢹⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⢸⡇⠄⠄⠄⢸⣿⡿⣃⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡟⢿⣿⣯⣾⡿⣦⣾⣇⠄⠄⠄⢠⡿⠃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣷⣶⣯⣙⢻⠄⢼⡿⠿⠃⠄⠄⢠⡄⠶⠿⠿⠿⠿⠿⢿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⠄⢠⡄⠄⠄⠄⠄⢠⡖⣛⣛⣛⣛⣃⣸⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⢩⣾⣿⣄⠄⠄⠄⠄⢸⣷⣍⠿⠿⠿⠿⢿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⢸⠟⠛⠛⣿⣇⠄⢠⣤⣾⡟⣛⣛⣛⣛⣃⣸⣿⣿⣿⣿ ⣿⣿⣿⣿⡿⠯⣷⣞⠄⣶⣾⣿⢻⡟⠁⠸⣿⣿⡇⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣇⣘⡛⢡⣾⠿⣿⣿⢸⡟⣀⣶⣾⣉⠻⣷⣍⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣿⣿⢸⠇⣿⣿⣿⣿⣶⣈⠻⣷⡌⢹⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣿⣿⣿⣿⣿⣿⣶⣶⣶⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢩⣭⣭⣭⡍⠿⢸⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡟⢩⣿⣯⡉⣸⡏⠉⠉⠉⢹⣿⡿⣃⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⡏⢩⣭⣹⡶⣿⣙⢿⣿⣇⠄⠄⠄⢠⡿⠃⣿⣿⣿⡿⠿⢿⣿⣿⣿⣿ ⣿⣿⣿⣷⣆⣙⡿⢯⣭⡉⠘⠛⠿⠃⠄⠄⢸⡇⠄⣉⣭⣭⣵⡷⢸⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣶⣙⣛⣃⢸⡇⠄⠄⠄⢠⡄⠘⣋⣀⣶⣶⣶⣾⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⢩⣭⣼⡇⠄⠄⠄⠄⠘⢣⡍⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡿⠿⣟⣩⣭⠘⣛⢻⣷⣤⡄⠄⠄⠄⢸⣷⣍⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣇⣘⣿⣟⣁⣶⣿⢸⣿⣄⠘⠻⣿⣿⣷⣌⠻⣷⣌⠹⢿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢩⣼⠟⢻⡇⣶⣾⣷⣈⠻⣷⣼⣿⡷⠸⢿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⡇⣶⢸⡇⣿⣿⣿⣿⣶⣶⣶⣶⣆⣃⣸⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⡇⣿⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣛⠻⠃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡟⢩⣭⡉⣿⠿⢩⣭⣭⣭⡍⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣶⣿⢯⡉⢸⡏⠄⠄⠄⢹⡇⠿⠿⠉⡍⢹⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣘⢿⣿⣇⠄⠄⠄⢸⣷⡔⠛⠃⠂⣼⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣘⠛⠛⠃⠄⠄⠘⢿⣷⣴⡿⣃⣸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⠿⣩⣍⠄⠘⠃⠄⠄⢠⡄⠄⠶⣶⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡏⣡⣾⡟⠛⢿⣷⣶⡄⠄⠄⠄⢹⣿⣷⡍⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⢿⣧⣾⠟⣋⢹⣿⣄⠄⠄⣠⣶⡟⠛⠧⣍⠹⢿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣷⣶⣶⣶⣶⣿⢸⣿⣿⡄⣘⢻⣿⣷⣤⣤⣼⣷⣌⠹⢿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⡇⢸⡇⣿⢸⣏⠶⣶⣶⣶⣶⣆⡳⣬⢹⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢩⣾⡇⣶⣶⣿⣶⢸⡇⣿⣿⣿⣿⣿⣷⣶⣾⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⡇⣶⣿⣿⣿⣿⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡟⢩⡉⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣧⣘⣿⡦⠿⠿⢩⡍⠉⢩⡍⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣙⢿⡆⢸⡇⠄⠄⠄⢸⡇⢉⣭⣍⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣘⢻⣿⡇⠄⠄⠄⢸⣿⡿⠛⠻⣿⡿⢋⣸⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣀⢹⣇⠄⠄⠄⠘⢿⣷⡔⣃⣶⣶⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣯⣿⣿⣯⣭⣭⣼⡿⠃⠄⠄⢠⡄⠄⠶⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡏⢡⣹⡿⣷⣠⡜⢿⡇⠄⠄⠄⠄⢸⣿⣷⣍⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣷⣖⣿⣟⣿⣟⣁⢸⣷⣤⣄⠄⠄⣸⡇⣈⠻⣷⣬⣍⠹⢿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣿⡟⣛⢻⣿⣧⣍⠶⣶⣎⡻⣷⡌⢹⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣸⡟⣛⣃⣿⠸⣿⡜⠻⣷⣍⠹⢷⣶⣶⣾⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⡟⣁⣿⣿⣿⣶⠸⡇⣶⣈⣛⣃⣸⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⠇⣿⣿⣿⣿⣿⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⢸⡆⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⢸⣧⡉⣿⢩⣭⣭⣭⡍⠿⠿⢿⣉⣍⢹⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣶⢹⡇⣩⡼⠋⠉⠉⢹⣷⣴⡿⣿⣋⣸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣘⢿⣿⣇⠄⠄⠄⠘⢿⡏⣶⣿⡿⠿⢿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡏⢩⣭⡉⠿⠄⢹⣿⠃⠄⠄⢠⡞⠃⢉⣭⡄⢛⣋⣹⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣷⣦⣙⣛⢿⣶⣾⡿⠃⠄⠄⠄⢠⣖⠛⣋⣶⣾⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⠶⣹⡇⠄⠄⠄⠄⢸⣿⣷⣭⣍⠹⠿⠿⢿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢸⣿⣷⣶⣄⠄⣠⣤⢹⡏⣈⣛⡻⣿⣷⡌⢹⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⢩⣾⠇⢠⣿⣿⡟⣛⣛⢻⣤⡄⣿⣿⣷⣶⣶⣶⣾⣿⣿ ⣿⣿⣿⣿⣿⡿⠟⢩⠘⣁⠶⢸⡟⣃⣶⣿⣿⢸⣿⣷⣍⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡇⢾⠄⣶⣿⣾⣿⣁⣿⣿⣿⣿⣈⠻⡿⠻⡇⠸⢿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣷⣶⣶⣿⣿⣙⣁⣿⣿⣿⣿⣿⣿⣶⣶⣶⠄⣷⢸⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⢩⡍⠿⠿⠿⢼⣿⣛⣸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⡿⠋⠄⢰⣇⣰⡿⣋⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡏⢩⡉⠿⣩⡉⠿⢸⡇⠄⠄⠄⣹⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣇⡘⢿⣿⡟⣿⣦⣼⡇⠄⠄⠘⢿⡏⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣶⣙⣛⢿⠿⠋⠄⠄⠄⠘⢣⣤⣭⣭⣭⣍⠹⠿⠿⢿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⠄⠘⠃⠄⠄⠄⢠⣿⢿⡿⠌⠛⠻⣿⡷⢸⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠉⣸⡇⠄⠄⠄⠄⠄⣹⡏⣈⣛⣛⣃⣰⣶⣾⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⣩⡜⠛⢣⣾⣿⡇⣈⢻⣿⣇⠿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⣾⣟⢣⣾⣿⣛⢻⡇⣿⠸⣿⣿⣇⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡇⢸⡏⣿⣘⣉⣿⣿⢸⡇⣿⣶⢸⡿⠻⣧⠈⢹⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⡿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢩⣾⡿⢸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢩⣭⣭⡍⠿⢉⣽⡿⣶⣾⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⠿⠿⠿⠿⠿⣿⢸⡇⠄⠄⢸⣷⣼⡏⣶⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣇⡘⢠⡘⢿⣦⡉⢸⡇⠄⠄⢠⣿⡿⠃⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣧⣘⣿⣦⡀⢸⡿⠃⠄⠄⠘⢿⡇⠶⠿⠿⢿⣿⠿⢿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣙⣛⠛⢷⡄⠄⠄⠄⠘⢷⣶⡿⣛⣻⣿⡃⠸⢿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢠⣼⠃⠄⠄⠄⠄⢸⣿⣷⣭⣭⣭⡥⢃⣸⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣠⣾⣿⠃⠄⠄⠄⣠⣶⣄⠄⣶⣶⣶⣶⣾⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⣩⣾⡟⠁⢸⣷⣾⡇⣘⢻⣿⣿⣇⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡇⣾⡟⣁⣘⣛⣛⣃⢸⡇⣿⣈⢻⡿⢻⣷⢸⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⠿⣿⣿⣴⣷⢼⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⡿⠿⢉⡔⠛⠛⢻⡇⠿⠻⡿⣿⣾⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣶⣙⢻⣦⣼⡇⠄⠄⠄⢸⣿⡇⣶⣿⣿⡿⠿⠿⢿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣘⢿⣿⣧⠄⠄⠄⢸⡿⠃⠿⢋⣭⣥⣿⢃⣸⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠶⠙⢻⣦⠄⠄⠘⠟⡘⠟⣋⣰⣶⣶⣾⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⠟⣩⣭⣭⣭⣾⣷⣀⡁⠄⠄⠄⠘⢧⡄⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣇⣘⣛⠁⠶⠄⠙⢿⣿⣟⡀⠄⠄⡀⢠⣷⣆⠸⢿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⡟⣃⠄⠻⠿⣿⣶⣾⣿⢸⣿⣌⡳⣌⢹⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣾⣦⣿⣿⣿⣿⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⢩⡔⠛⢣⡍⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣙⢿⡆⣸⣧⠄⠄⠄⢸⣇⢉⣭⣍⠹⢏⣭⢹⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣘⢿⣿⡿⠄⠄⠄⢸⣿⣿⠛⣿⡿⢋⣰⣾⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⠄⠁⡀⠄⠄⠄⠙⡿⠟⣋⣰⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⣩⣭⣭⣭⣄⡺⠟⠄⠄⠄⠘⠇⡀⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡇⣾⡟⣁⣶⠙⠿⣷⣦⠄⠄⠄⠄⢸⣿⣷⣌⢹⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣙⣿⡦⠿⣿⣿⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣙⢿⡆⣿⢩⣴⠿⠂⢩⡍⠿⢿⣿⠿⠿⠿⢿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣧⡍⠄⠁⠄⠄⠘⢧⣴⡿⣿⡃⢀⣿⢸⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⠙⢿⣷⣦⠄⠄⠄⢸⡏⠶⢋⡵⢋⣰⣾⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⣿⡿⠿⠶⠘⢻⣧⠄⠄⠄⠘⣿⡶⣋⣰⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣧⣘⣿⣟⣛⢿⣷⣾⣿⠄⠄⠄⠘⢧⣄⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⢿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢩⣭⣭⡍⠿⠿⢴⣿⣃⣸⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⠉⠉⠙⢧⣤⣾⣋⣸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⢩⡍⠿⢸⡿⠄⠄⠄⢸⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣧⣘⢿⣦⡜⣛⢣⣤⣤⣦⠄⠄⠘⠋⣀⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⢿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢰⣿⢃⣸⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢩⣭⡍⠿⠿⢸⣿⢸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⠿⠿⣿⣿⣿⣿⠿⠘⠟⠉⠹⢧⣤⣾⣋⣸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣧⣘⣶⣿⣿⣯⡍⢸⣷⠄⠄⠄⠈⠹⠏⣿⣿⣿⣿⣿⣿⣿⣿ `)
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⢿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢰⣷⢸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⢸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢩⣭⡍⠿⢉⣼⣿⢸⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢩⣼⠟⠉⠁⢠⣼⣿⠏⢸⣿⣿⣿⣿⣿⣿ `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'okayeg") {
        if (!block) {
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠉⠉⠉⣩⡏⡘⣯⡈⠙⢿⣿⣛⣩⣤⣤⣭⣽⣿⣿ ⣿⣿⣿⣿⣿⣿⡿⠛⠉⠄⠄⠄⠄⠄⢿⡇⢡⣿⣿⣦⠈⠑⣿⣿⣿⠉⣿⣿⣿⣿ ⣿⣿⣿⡿⠿⠋⠄⠄⠄⠄⠄⠄⠄⠄⠄⠉⠚⠿⢿⡿⠄⠄⠉⢿⣟⠄⣿⣿⣿⣿ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠹⠾⠿⠋⠄⣿ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸ ⢠⣶⣶⠢⣄⣀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸ ⠘⢿⣿⣷⣮⡹⣷⣦⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠘ ⠄⠄⠈⢿⣿⣿⣎⡛⠿⣷⣦⣀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⣦⣤⣀⠄⠈⠛⠿⣿⣷⣮⣍⣛⠿⢿⣶⣶⣦⣄⣀⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⣠ ⣿⣿⣿⣿⣶⣦⣄⡀⠉⠉⠉⠛⠻⢷⣦⣭⣭⣙⣛⣛⠷⠶⠤⠤⠤⠤⠤⠤⠤⢎ ⣿⡟⣩⣶⣶⣦⡙⢿⣷⣦⣄⡀⠄⠄⠈⠉⠉⠉⠛⠛⠛⠛⠛⠿⠿⢿⣿⡿⢿⣿ ⡟⣸⣿⣿⣿⣿⣿⡄⣿⣿⣿⣿⣷⣶⣤⣤⣀⡀⠄⠄⠄⠄⠄⠄⢀⣀⣰⣾⣿⣿ ⡇⣿⣿⣿⣿⣿⣿⣿⢸⣿⠋⣭⡙⢿⠋⣩⡝⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣷⡘⢿⣿⣿⣿⠿⣃⣿⣿⡀⠶⠒⣾⡀⠻⠏⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣶⣮⣭⣶⣾⣿⣿⣿⣿⣿⣿⣿⣍⣉⣁⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'lule") {
        if (!block) {
            client.say(channel, `⠋⣁⣀⣀⡈⠙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇ ⣿⣿⢟⣛⣿⣿⡲⣾⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⠛⠛⠛⠛⠛⠻⣿⣿⣿⡇ ⣿⡇⠾⠛⠛⠛⠛⠄⢻⣿⣿⣿⣿⡍⠉⠉⠄⠄⠄⢀⣤⢤⣄⣀⠄⠄⠈⠉⠄ ⣿⣥⣤⣄⣀⣠⣶⣀⣠⣿⣿⣿⡿⠁⠄⠄⣀⣐⠊⠛⠛⠻⠖⠄⠉⢀⡀⢀⡀ ⣿⣿⣿⣿⣿⣛⣉⣵⣿⣿⣿⡿⠁⠄⠄⢲⣿⣿⣿⣳⠂⠒⠄⠄⠄⠄⠠⠾⠿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡦⠄⠄⠈⠙⠻⣿⣿⣿⣶⣶⣶⣶⣾⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⢻⣿⣿⣿⡿⠋⠄⠄⠄⠄⠄⠄⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⠏⣰⡿⠛⠛⠃⠄⢠⠄⠄⠄⠄⠄⠄⠄⠄⠘⢿⣿⣿⣿⣿⣿⣿⣿ ⠙⣿⣿⣿⣴⡿⠄⠄⠄⠄⠘⠛⠒⠄⠄⠐⠂⠄⠄⠄⠄⠈⢻⣿⣿⣿⣿⢿⣿ ⠠⣿⣿⣿⣿⣷⡀⢠⣶⣾⣿⣿⣿⠿⡿⢿⡧⣶⢤⠄⠄⠄⠄⣻⣿⣿⣿⣿⣿ ⣶⣿⣿⣿⡟⢨⠙⠄⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⣰⣿⡀⣿⣿⣿⣿⣿⣿ ⢿⣿⢟⠹⡁⣼⡀⣄⢀⣀⠐⠠⢄⣀⣀⣴⣶⣷⣶⣿⣿⣿⣿⡿⠻⣿⣿⣿⣿ ⠈⠂⠄⠄⠠⢿⣿⡘⣺⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠄⠄⠻⠾⡛ ⠄⠄⠄⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠄⠄⠄⠄⠄⠂`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'ping") {
        if (!block) {
        const getUptime = new Date().getTime() - Date.parse(runTime);
        const botUptime = humanizeDuration(getUptime, { round: true })
            client.color("SpringGreen")
            client.ping(channel).then(function (data) {
                console.log(data);
                client.say(channel, `FeelsDankMan 🏓 Pong! Latency is ${Math.floor(Math.round(data * 1000))}ms | Bot Uptime: ${botUptime} | RAM: ${Math.round(process.memoryUsage().rss / 1024 / 1024)}mb `)
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));

            })
        }
    }


    if (message == "'pingpong") {
        if (!block) {
            client.say(channel, `ppPing ppPong 🏓 PingPong `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'forseninsane") {
        if (!block) {
            client.say(channel, `⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠔⠀⠅⠌⣐⢠⢡⢑⢹⢸⢢⡀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠠⠁⢌⢪⡺⣺⣝⣗⡷⣕⡧⡧⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠈⠀⠂⢅⢳⣳⣟⣷⣷⣳⣽⣳⣻⡺⡀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠂⠁⠌⡞⡾⣽⢯⣿⣿⣿⣾⣾⣽⣕⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⡀⠅⢧⣻⣯⡿⣾⣳⢯⢯⢿⢿⣷⡇ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠜⡘⡮⡷⣟⣗⢕⢅⢅⠣⡫⡫⠃ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⠀⠀⠠⠈⠀⠅⡣⠫⡪⡪⢪⢩⢳⢣⡣⡁⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⡀⠀⠌⡂⠁⡀⠁⠀⠡⠱⣕⣇⢇⢝⠜⡌⡂⠀ ⠀⠀⠀⠀⠀⠀⠀⡈⣀⠀⢂⢠⡢⣇⢆⢂⠠⠈⡀⠅⡑⠔⢍⠳⡱⢡⠱⡀⠀ ⣠⣠⣢⢮⣲⣕⢷⢽⣺⡽⣷⣵⢽⣺⣳⡐⠠⠀⠀⠂⡐⠡⢣⢑⠌⡐⠅⠀⠀ ⣷⣗⡯⡷⡷⣯⢯⡻⡷⣿⣿⣽⣿⡿⣞⡷⣅⠌⡠⠁⠀⠌⢐⠠⢁⠢⠁⠀⠀ ⣿⣯⣟⣯⣯⡯⣟⣿⣻⣞⣮⣯⣟⣿⣿⡿⣷⣵⣰⢡⢊⡐⡄⡂⡢⠁⠀⠀⠀ ⣿⣿⢿⣺⣳⢿⣟⣾⣺⣽⣳⣟⡾⡾⣞⣟⣿⣺⡽⣝⣗⢽⣺⢾⣔⢤⢀⠀⠀ ⣿⣿⣿⣿⣽⡽⣽⣳⣟⣾⣺⢾⢽⣻⢽⣽⣺⣳⢽⣳⢽⢝⣮⣻⣺⢽⡮⡦⣄  `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'copetix") {
        if (!block) {
            client.say(channel, `⠈⠀⠐⠠⠐⡀⡂⡢⡂⢆⠪⡘⠤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⢀⢂⢅⢎⢢⢊⢔⢕⡎⣗⡵⣕⣵⡱⡠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⢰⢱⢕⣗⢷⣽⣾⣯⣿⣿⣿⣿⡿⣿⡄⠋⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⢜⢜⢵⢝⣽⢯⣿⣿⣟⣿⣾⣿⣿⣿⣿⠌⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠌⢆⢇⢟⣞⣿⣻⣽⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⡘⠔⢅⢣⢳⣯⣿⣿⣿⣿⣿⣿⣿⡿⡾⡿⠵⢀⠨⡀⠀⠀⠀⠀⠀⠀⠀���⠀ ⣈⠪⠨⡂⠫⡪⡓⣝⢽⢙⠿⣽⡺⣺⣽⣞⡾⡢⡢⠅⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠹⣎⢌⡢⡑⣝⣟⣿⣽⡎⢜⣿⣝⣿⣽⣯⢯⠂⠈⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠂⠝⣷⡹⢮⣻⣽⡿⡾⣹⢮⣻⣿⣾⣽⣽⢧⠃⠀⠀⠀⠀⡀⠀⠀⡀⠀⠀⠀ ⠀⠡⢊⢫⢷⡽⣾⢾⣟⠝⡾⠽⣿⢿⣻⡽⡕⣠⣶⢿⣻⡷⡾⠺⠠⠀⠀⠀⠀ ⠐⡈⠀⠕⡍⢯⢟⡿⡽⣻⢽⣻⡽⡿⣽⢧⣓⡟⡥⡧⡶⡴⣲⢽⡲⣲⣲⢤⡂ ⢸⢶⡈⡐⠨⢊⢗⡵⣟⣞⣷⣟⣿⢿⡯⢃⡽⡇⢯⣻⢮⣣⡵⡶⡮⣵⣲⣺⡂ ⠀⠍⢷⣔⠈⡀⠂⡝⣵⣳⣳⣏⣟⣿⡃⣾⡏⠀⣟⢾⢽⣺⢽⢽⢽⣺⣺⣺⡂ ⠀⠡⡡⢙⠷⢶⣦⣤⣁⢓⠵⡻⣺⡵⣟⠏⠂⡀⠹⠽⠵⠼⠭⠭⠽⠾⠵⠗⠇ `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'trihard") {
        if (!block) {
            client.say(channel, `⣿⣿⣿⣿⣿⣿⡿⢫⣍⣭⣥⣶⣶⡶⠶⣭⣴⣬⣩⣍⣛⢻⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⠟⣥⣿⣭⡿⠿⠿⠟⠿⠁⠉⢻⣿⣿⣿⣿⣷⣬⠹⣿⣿⣿⣿⣿ ⣿⣿⣿⡿⢃⣾⡿⠟⠉⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠛⠻⢿⣷⠸⣿⣿⣿⣿ ⣿⣿⣿⡲⣿⣯⠁⠄⠄⠄⣀⣀⠄⠄⢀⣀⣀⠄⠄⠄⠄⠄⠄⠈⠃⠹⣿⣿⣿ ⣿⣿⣿⠃⠼⠄⠄⠄⠄⠾⢿⣿⣿⣿⣿⣿⣿⣿⣿⣦⠤⠄⠄⠄⠄⠄⣿⣿⣿ ⣿⣿⣿⠄⠄⠄⠄⠄⠄⠄⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⠄⣿⣿⣿ ⣿⣿⣿⣿⣇⣤⣄⠄⠄⣠⣬⣽⣿⣿⣿⣿⣿⣿⣿⣿⣧⡀⠄⠄⢠⣾⣿⣿⣿ ⣿⣿⣿⣿⣇⢿⣿⠄⢀⣿⣿⣴⣅⣼⣿⣿⣿⡿⣟⠉⡒⠄⢀⣠⣾⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣶⠄⠄⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣴⠄⣾⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡄⠄⠈⠛⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢠⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣷⡀⠄⠛⣰⣾⣾⣿⣿⣿⣤⠉⣉⠉⣠⣾⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣷⡀⠄⢻⣿⣿⣿⣿⣿⣿⠟⢁⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠸⣿⣿⣟⣛⣛⠁⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡉⠛⠛⠛⣫⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿  `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'bingqillin") {
        if (!block) {
            client.say(channel, `BINGQILIN BING CHILLING BINGQILIN BING CHILLING BINGQILIN BING CHILLING BINGQILIN BING CHILLING BINGQILIN BING CHILLING BINGQILIN BING CHILLING BINGQILIN BING CHILLING BINGQILIN BING CHILLING `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'bingchilling") {
        if (!block) {
            client.say(channel, `BINGCHILLING BING CHILLING BINGCHILLING BING CHILLING BINGCHILLING BING CHILLING BINGCHILLING BING CHILLING BINGCHILLING BING CHILLING BINGCHILLING BING CHILLING BINGCHILLING BING CHILLING BINGCHILLING BING CHILLING `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'zyzzrave") {
        if (!block) {
            client.say(channel, `zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave `)
            client.say(channel, `zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave `)
            client.say(channel, `zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave `)
            client.say(channel, `zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave `)
            client.say(channel, `zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave `)
            client.say(channel, `zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave `)
            client.say(channel, `zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave `)
            client.say(channel, `zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave `)
            client.say(channel, `zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave zyzzBass zyzzRave `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'poki") {
        if (!block) {
            client.say(channel, `Simping for Pokimane isn't just a moment, it’s a lifestyle 💫 a reason to breathe 🤲 an escape from this evil world filled with thieves 🌏 It’s art 🖼 the first gift you open on Xmas 🎁 a hug from a loved one 🤗 everything you’ve ever wanted love 💗 everything you need 💕🥺`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }


    if (message == "'lsco") {
        client.say(channel, `pepeLaugh 👉 https://i.nuuls.com/heLxR.png `)
    }


    if (message == "'crucialenjoyer") {
        client.say(channel, `EZ 👉 https://i.nuuls.com/3MH4j.png `)
    }

    if (message == "'pokilookingatyou") {
        if (!block) {
            client.color("SeaGreen")
            client.say(channel, `⣿⣿⣿⣿⣿⣿⣿⣿⢟⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣻⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣻⣿⣿⠿⢛⣩⡭⠭⠭⠭⠭⢿⣟⡿⢿⣶⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⡏⠉⠁⠐⠛⠁⠄⠄⠄⠄⠄⠄⠈⠉⠙⠻⢷⣶⣯⡻⣿⣿⣿ ⣿⣿⣿⣿⠋⠉⠄⠄⢀⣶⣿⣿⣿⣿⣿⣿⣷⣄⠄⠄⠄⠄⠄⠄⠛⢿⣮⡻⣿ ⣿⣿⣾⠏⠄⠄⠄⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡧⠄⠄⠄⠄⠄⠄⠄⠙⠿⢟ ⣿⣿⠏⠄⠄⠄⣠⣿⣿⡿⢿⣿⣿⣿⣿⣿⡿⠛⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⣟⠋⠄⠄⠄⠄⣿⣵⣶⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⣈ ⡁⠄⠄⠄⠄⢸⣿⣿⠿⠟⠻⣿⣿⣿⣿⣿⣿⡉⠉⠄⠄⠄⠄⠄⠄⠄⠄⠄⢙ ⠄⠄⠄⠄⠄⣿⣿⣦⣤⣴⣾⣿⣿⣿⣿⣿⣿⣿⣷⣶⣤⡀⠄⠄⠄⠄⠄⠄⠄ ⠄⠄⠄⠄⠄⣿⣿⣿⣿⣿⣿⣿⠟⢿⡿⠄⠻⣿⣿⣿⣿⡇⠄⠄⠄⠄⠄⠄⠄ ⠄⠄⠄⠄⠄⣿⣿⣿⣿⣿⣿⣿⣶⣿⣷⣶⣶⣿⣿⣿⣿⡇⠄⠄⠄⠄⠄⠄⠄ ⠄⠄⠄⠄⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠻⠿⣿⣿⣿⡇⠄⠄⠄⠄⠄⠄⠄ ⠄⠄⠄⠄⠄⢹⣿⣿⣿⣿⣋⣥⣶⣶⣤⣤⣶⣄⡀⢹⣿⠃⠄⠄⠄⠄⠄⠄⠄ ⠄⢀⠄⠄⠄⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣅⠈⠙⠿⠛⠄⠄⠄⠄⠈⠑⢦⣄ `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'commands") {
        if (!block) {
            client.color("Red")
            client.say(channel, `https://github.com/felyp7/juiceb0t`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'pick") && command === 'pick') {
        if (!block) {
            let array = ["Yes Okayge", "No Okayge", "Maybe Okayge"]
            client.color("OrangeRed")
            client.say(channel, ` @${user.username} ${array[Math.floor(Math.random() * array.length)]}`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message == "'roll") {
        if (!block) {
            client.color("HotPink")
            client.say(channel, `@${user.username} :tf: 👉   ${Math.floor(Math.random() * 2) + 1}!`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'gaytest") && command === 'gaytest') {
        if (!block) {
            client.color("Green")
            client.say(channel, `@${user.username} ${args.join(" ")} is  ${Math.floor(Math.random() * 100) + 1}% gay Okayge`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'lesbiantest") && command === 'lesbiantest') {
        if (!block) {
            client.color("GoldenRod")
            client.say(channel, `@${user.username} ${args.join(" ")} is  ${Math.floor(Math.random() * 100) + 1}% lesbian Okayge`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'cock") && command === 'cock') {
        if (!block) {
            client.color("Firebrick")
            client.say(channel, `@${user.username} ${args.join(" ")} has ${Math.floor(Math.random() * 30) + 1}cm cock Okayge`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'vagina") && command === 'vagina') {
        if (!block) {
            client.color("DodgerBlue")
            client.say(channel, `@${user.username} ${args.join(" ")} 's vagina is ${Math.floor(Math.random() * 17) + 1}cm deep Okayge`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'iq") && command === 'iq') {
        if (!block) {
            client.color("Coral")
            client.say(channel, `@${user.username} ${args.join(" ")} has ${Math.floor(Math.random() * 269) + 1}iq PogU`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'wedding") && command === 'wedding') {
        if (!block) {
            client.color("Coral")
            client.say(channel, `@${user.username} and ${args.join(" ")} will have wedding in ${Math.floor(Math.random() * 20) + 1} Years ${Math.floor(Math.random() * 11) + 1} Months ${Math.floor(Math.random() * 30) + 1} Days ${Math.floor(Math.random() * 59) + 1} Minutes 💒 ❤ 💍  Pag`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'swag") && command === 'swag') {
        if (!block) {
            client.color("Chocolate")
            client.say(channel, `@${user.username} ${args.join(" ")} has ${Math.floor(Math.random() * 100) + 1} % swag 😎 `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'love") && command === 'love') {
        if (!block) {
            client.color("Green")
            client.say(channel, `Love between ${user.username} and ${args.join(" ")} is ${Math.floor(Math.random() * 100) + 1}% PogChamp ❤  `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'depression") && command === 'depression') {
        if (!block) {
            client.color("Blue")
            client.say(channel, `@${user.username} ${args.join(" ")} is ${Math.floor(Math.random() * 100) + 1}% Depressed PoroSad 💔  `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.startsWith("ppBounce") && user['user-id'] === "654447790") {
            client.color("CadetBlue")
            client.say(channel, "ppJump")
    }

    if (message.startsWith("ppCircle") && user['user-id'] === "625016038") {
            client.color("BlueViolet")
            client.say(channel, "ppCircle")
    }

    if (message === "'mods" && user['user-id'] === "162760707") {
        if (!block) {
            client.mods(channel).then(function (data) {
                console.log(data);
                client.say(channel, "MODS are: " + data)
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            })
        }
    }

    if (message === "'vips" && user['user-id'] === "162760707") {
        if (!block) {
            client.vips(channel).then(function (data) {
                console.log(data);
                client.say(channel, `VIPS are: ` + data)
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            })
        }
    }

    if (message.toLowerCase().startsWith("'7tvsearch") && command === '7tvsearch') {
        if (!block) {
            if (args.join(" ") == []) {
                client.say(channel, 'No emote provided')
                ; return;
            }
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
            client.color("HotPink")
            client.say(channel, `@${user.username} https://7tv.app/emotes?sortBy=popularity&page=0&query=${args.join(" ")} `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }

    }

    if (message.toLowerCase().startsWith("'bttvsearch") && command === 'bttvsearch') {
        if (!block) {
            if (args.join(" ") == []) {
                client.say(channel, 'No emote provided')
                ; return;
            }
            client.color("Red")
            client.say(channel, `@${user.username} https://betterttv.com/emotes/shared/search?query=${args.join(" ")} `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'ffzsearch") && command === 'ffzsearch') {
        if (!block) {
            if (args.join(" ") == []) {
                client.say(channel, 'No emote provided')
                ; return;
            }
            client.color("Green")
            client.say(channel, `@${user.username} https://www.frankerfacez.com/emoticons/?q=${args.join(" ")} `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'emotes") && command === 'emotes') {
        if (!block) {
            let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
            client.color("Chocolate")
            client.say(channel, `@${user.username} https://e.wrnv.xyz/list/${channelTarget} https://emotes.raccatta.cc/twitch/${channelTarget}`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }


    if (message.toLowerCase().startsWith("'color") && command === 'color') {
        if (!block) {
            let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
            client.color("Chocolate")
            client.say(channel, `@${user.username} ${user.color}`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("ppPong") && user['user-id'] === "237719657" && channel == "kawanpls") {
        if (!block) {
            client.color("Blue")
            client.say(channel, `ppPing ppPong `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }

    if (message.toLowerCase().startsWith("'logs") && command === 'logs') {
        if (!block) {
            let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
            client.color("Red")
            client.say(channel, `@${user.username} https://logs.apulxd.ga/?channel=${channelTarget}&username=${userTarget} or https://logs.ivr.fi/?channel=${channelTarget}&username=${userTarget}`)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }
    if (message.toLowerCase().startsWith("'massping") && command === 'massping' && user['user-id'] === "162760707") {
            const tChannel = channel.replace("#", "")
            let request = await got(`https://tmi.twitch.tv/group/user/${tChannel}/chatters`, { responseType: 'json' })
            if (!block) {
            let all = request.body.chatters
            let arr = [...all.viewers, ...all.vips, ...all.moderators]
            let msping = arr.values()
            for (let letter of msping) {
                client.say(channel, `${letter} ${args.join(" ") ?? 'TriHard'}`) 
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            }
        }
    }

    

    if (message.toLowerCase().startsWith("'retard") && command === 'retard') {
        if (!block) {
            client.color("Red")
            client.say(channel, `@${user.username} https://i.nuuls.com/Jiwv3.png , https://i.nuuls.com/PDVFk.png , https://i.nuuls.com/gRnsh.png , https://i.nuuls.com/N7F5g.png , https://i.nuuls.com/L9l4Y.png , https://i.nuuls.com/8MqtH.png , https://i.nuuls.com/q81Qw.png , `)
            block = true;
            setTimeout(() => {
                block = false;
            }, (5 * 1000));
        }
    }


        if (message.toLowerCase().startsWith("'followage")) {
            if (!block) {
        
                let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
        
                const followage = await got(`https://decapi.me/twitch/followage/${channelTarget}/${userTarget}?precision=3`); // will return the days too
                let data = followage.body
                client.say(channel, `${userTarget} is following ${channelTarget} for: ${data}`)  
        
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            }
        }


        if (message.toLowerCase().startsWith("'accage")) {
            if (!block) {
        
                let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
        
                const accage = await got(`https://decapi.me/twitch/accountage/${userTarget}?precision=4`)
                let data = accage.body
        
                client.say(channel, `${userTarget}'s account is ${data} old`)  
        
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            }
        }

        if (message.toLowerCase().startsWith("'avatar")) {
            if (!block) {
        
                let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
        
                const avatar = await got(`https://decapi.me/twitch/avatar/${userTarget}`)
                let data = avatar.body
        
                client.say(channel, `${data}`)  
        
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            }
        }

        if (message.toLowerCase().startsWith("'followers")) {
            if (!block) {
        
                let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
        
                const followers = await got(`https://decapi.me/twitch/followcount/${userTarget}`)
                let data = followers.body
        
                client.say(channel, `${userTarget} has ${data} followers`)  
        
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            }
        }

        if (message.toLowerCase().startsWith("'subs")) {
            if (!block) {
        
                let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
        
                const subs = await got(`https://decapi.me/twitch/subcount/${channelTarget}?`); 
                let data = subs.body
        
                client.say(channel, `Channel ${channelTarget} has  ${data} subscribers`)  
        
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            }
        }

        if (message.toLowerCase().startsWith("'subemotes")) {
            if (!block) {
        
                let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
        
                const subemotes = await got(`https://decapi.me/twitch/subscriber_emotes/${channelTarget}?`); 
                let data = subemotes.body
                client.say(channel, `Channel ${channelTarget} has these emotes: ${data}`)  
        
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            }
        }


        if (message.toLowerCase().startsWith("'uptime")) {
            if (!block) {
        
                let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
        
                const uptime = await got(`https://decapi.me/twitch/uptime/${channelTarget}?`); 
                let data = uptime.body
                client.say(channel, data)  
        
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            }
        }


        if (message.toLowerCase().startsWith("'viewers")) {
            if (!block) {
        
                let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
        
                const viewers = await got(`https://decapi.me/twitch/viewercount/${channelTarget}?`); 
                let data = viewers.body
                client.say(channel, data)  
        
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            }
        }

        if (message.toLowerCase().startsWith("'title")) {
            if (!block) {
        
                let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
        
                const title = await got(`https://decapi.me/twitch/title/${channelTarget}?`); 
                let data = title.body
                client.say(channel, `Title is: ${data}`)  
        
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            }
        }

        if (message.toLowerCase().startsWith("'uid")) {
            if (!block) {
        
                let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
        
                const uid = await got(`https://decapi.me/twitch/id/${userTarget}?`); 
                let data = uid.body
                client.say(channel, `${userTarget}'s id is ${data}`)  
        
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            }
        }

        if (message.toLowerCase().startsWith("'game")) {
            if (!block) {
        
                let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
        
                const game = await got(`https://decapi.me/twitch/game/${channelTarget}?`); 
                let data = game.body
                client.say(channel, `${channelTarget} is currently playing  ${data}`)  
        
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            }
        }

        

        if (message.toLowerCase().startsWith("'subage") && command === 'subage') {
            if (!block) {
        
                let userTarget = user.username;
                if (args[0]) {
                    if (args[0].startsWith("@")) {
                        args[0] = args[0].substring(1);
                    }
                    userTarget = args[0];
                }
        
                let channelTarget = channel.replace("#", "");
                if (args[1]) {
                    channelTarget = args[1];
                }
        
                const subage = await got(`https://decapi.me/twitch/subage/${channelTarget}/${userTarget}?precision=4`);
                let data = subage.body
                    if (data === '[Error from Twitch API] 404 Not Found') {
                    client.say(channel, `@${user.username} ${userTarget}  is not a subscriber`)
                ;return;
                }
                client.say(channel, `${userTarget} is subscribed to ${channelTarget} for ${data}`)  
                
                block = true;
                setTimeout(() => {
                    block = false;
                }, (5 * 1000));
            }
        }

        let afkcheck = client.afk.get(user['user-id']); 
if (afkcheck) { 
    client.afk.delete(user['user-id']); 
    client.say(channel, `${user['display-name']} is no longer afk: ${afkcheck.reason} (${humanizeDuration(new Date().getTime() - Date.parse(afkcheck.time), { round: true })})`)
}
 
if (message.toLowerCase().startsWith("'afk")) {
    if (!block) {

        let afkMessage = args.join(' ') ? args.join(' ') : 'no message';
        let afklist = client.afk.get(user['user-id']);
        if (!afklist) {
            let construct = {
                id: user['user-id'],
                reason: afkMessage,
                time: new Date().toString()
            };
            client.afk.set(user['user-id'], construct);

            client.say(channel, `@${user.username} is afk: ${afkMessage}`)
        }

        block = true;
        setTimeout(() => {
            block = false;
        }, (5 * 1000));
    }
}

let brbcheck = client.brb.get(user['user-id']); 
if (brbcheck) { 
    client.brb.delete(user['user-id']); 
    client.say(channel, `${user['display-name']} is back: ${brbcheck.reason} (${humanizeDuration(new Date().getTime() - Date.parse(brbcheck.time), { round: true })})`)
}

if (message.toLowerCase().startsWith("'brb")) {
    if (!block) {

        let brbMessage = args.join(' ') ? args.join(' ') : 'ppHop';
        let brblist = client.brb.get(user['user-id']);
        if (!brblist) {
            let construct = {
                id: user['user-id'],
                reason: brbMessage,
                time: new Date().toString()
            };
            client.brb.set(user['user-id'], construct);

            client.say(channel, `@${user.username} is going to be right back: ${brbMessage}`)
        }

        block = true;
        setTimeout(() => {
            block = false;
        }, (5 * 1000));
    }
}

let gncheck = client.gn.get(user['user-id']); 
if (gncheck) { 
    client.gn.delete(user['user-id']); 
    client.say(channel, `${user['display-name']} just woke up: : ${gncheck.reason} (${humanizeDuration(new Date().getTime() - Date.parse(gncheck.time), { round: true })})`)
}

if (message.toLowerCase().startsWith("'gn")) {
    if (!block) {

        let gnMessage = args.join(' ') ? args.join(' ') : '🛏 💤 ';
        let gnlist = client.gn.get(user['user-id']);
        if (!gnlist) {
            let construct = {
                id: user['user-id'],
                reason: gnMessage,
                time: new Date().toString()
            };
            client.gn.set(user['user-id'], construct);

            client.say(channel, `@${user.username} is now sleeping : ${gnMessage}`)
        }

        block = true;
        setTimeout(() => {
            block = false;
        }, (5 * 1000));
    }
}

if (message.toLowerCase().startsWith("'tuck")) {
    let userTarget = user.username;
    if (args[0]) {
        if (args[0].startsWith("@")) {
            args[0] = args[0].substring(1);
        }
        userTarget = args[0];
    }
        if (userTarget == user.username){
            client.say(channel, `@${user.username} tucked himself to bed Sadge 👉 🛏 `)
        ;return;
        }
    client.say(channel, `@${user.username} tucked ${userTarget} to bed FeelsOkayMan 👉 🛏 `)
}

});
